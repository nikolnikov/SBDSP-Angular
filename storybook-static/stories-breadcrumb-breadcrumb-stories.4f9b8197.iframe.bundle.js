"use strict";(self.webpackChunksbdsp_angular=self.webpackChunksbdsp_angular||[]).push([[7842],{"./src/stories/breadcrumb/breadcrumb.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{BasicBreadcrumb:()=>BasicBreadcrumb,BreadcrumbWithDropdown:()=>BreadcrumbWithDropdown,__namedExportsOrder:()=>__namedExportsOrder,default:()=>breadcrumb_stories});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),common_module_Dx7dWex5=__webpack_require__("./node_modules/@angular/common/fesm2022/common_module-Dx7dWex5.mjs"),menu=__webpack_require__("./node_modules/@angular/material/fesm2022/menu.mjs"),module_C9K6ZqpI=__webpack_require__("./node_modules/@angular/material/fesm2022/module-C9K6ZqpI.mjs"),icon_button_component=__webpack_require__("./src/stories/button/icon-button.component.ts");let QDSBreadcrumbComponent=class QDSBreadcrumbComponent{constructor(el,renderer,cdr){this.el=el,this.renderer=renderer,this.cdr=cdr,this.breadcrumbs=[],this.customClasses="",this.truncatedItems=[],this.truncatedMenuItems=[],this.subscriptions=[]}ngAfterViewInit(){this.el.nativeElement.getAttributeNames().forEach((attr=>this.renderer.removeAttribute(this.el.nativeElement,attr))),setTimeout((()=>{this.checkTruncation()}),100),this.subscriptions.push(this.textRefs.changes.subscribe((()=>{setTimeout((()=>{this.checkTruncation()}),100)}))),this.subscriptions.push(this.menuTextRefs.changes.subscribe((()=>{setTimeout((()=>{this.checkMenuTruncation()}),100)})))}ngOnDestroy(){this.subscriptions.forEach((sub=>sub.unsubscribe()))}onWindowResize(){setTimeout((()=>{this.checkTruncation(),this.checkMenuTruncation()}),100)}getMiddleBreadcrumbs(){return this.breadcrumbs.slice(1,-1)}getLastBreadcrumb(){return this.breadcrumbs[this.breadcrumbs.length-1]}handleMenuItemClick(breadcrumb){breadcrumb.href&&(window.location.href=breadcrumb.href)}onMenuOpened(){console.log("🚀 onMenuOpened called"),setTimeout((()=>{console.log("⏰ About to call checkMenuTruncation"),this.checkMenuTruncation()}),150)}onMenuButtonClicked(){setTimeout((()=>{this.checkMenuTruncation()}),200)}checkTruncation(){const truncated=[];this.textRefs.forEach((ref=>{const element=ref.nativeElement;if(element&&element.scrollWidth>element.clientWidth){const index=parseInt(element.getAttribute("data-index")||"0",10);"true"===element.getAttribute("data-is-menu")||truncated.push(index)}})),this.truncatedItems=truncated,this.cdr.detectChanges()}checkMenuTruncation(){const truncated=[];this.menuTextRefs.forEach(((ref,refIndex)=>{const element=ref.nativeElement,dataIndex=element?.getAttribute("data-index");if(element&&element.scrollWidth>element.clientWidth){const index=parseInt(dataIndex||"0",10);truncated.push(index)}})),this.truncatedMenuItems=truncated,setTimeout((()=>{this.menuTextRefs.forEach(((ref,refIndex)=>{const element=ref.nativeElement;parseInt(element?.getAttribute("data-index")||"0",10),this.getMiddleBreadcrumbs()[refIndex]}))}),10)}isTruncated(index,isInMenu=!1){return(isInMenu?this.truncatedMenuItems:this.truncatedItems).includes(index)}static{this.ctorParameters=()=>[{type:core.ElementRef},{type:core.Renderer2},{type:core.ChangeDetectorRef}]}static{this.propDecorators={breadcrumbs:[{type:core.Input}],customClasses:[{type:core.Input}],textRefs:[{type:core.ViewChildren,args:["textRef"]}],menuTextRefs:[{type:core.ViewChildren,args:["menuTextRef"]}],onWindowResize:[{type:core.HostListener,args:["window:resize"]}]}}};QDSBreadcrumbComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"qds-breadcrumb",standalone:!0,imports:[common_module_Dx7dWex5.MD,menu.Cn,module_C9K6ZqpI.h,icon_button_component.R],template:'\n        <div class="ds-breadcrumbs" [ngClass]="customClasses">\n            <ng-container *ngIf="breadcrumbs.length <= 3; else expandedView">\n                <div\n                    *ngFor="let breadcrumb of breadcrumbs; let i = index"\n                    class="ds-breadcrumbs__item"\n                >\n                    <ng-container\n                        [ngTemplateOutlet]="breadcrumbContent"\n                        [ngTemplateOutletContext]="{\n                            breadcrumb: breadcrumb,\n                            index: i,\n                            isInMenu: false\n                        }"\n                    >\n                    </ng-container>\n                </div>\n            </ng-container>\n\n            <ng-template #expandedView>\n                <div class="ds-breadcrumbs__item">\n                    <ng-container\n                        [ngTemplateOutlet]="breadcrumbContent"\n                        [ngTemplateOutletContext]="{\n                            breadcrumb: breadcrumbs[0],\n                            index: 0,\n                            isInMenu: false\n                        }"\n                    >\n                    </ng-container>\n                </div>\n\n                <div class="ds-breadcrumbs__item">\n                    <qds-icon-button\n                        icon="dots-three"\n                        [matMenuTriggerFor]="breadcrumbMenu"\n                        size="md"\n                        tooltip="View more"\n                        #menuTrigger="matMenuTrigger"\n                        (click)="onMenuButtonClicked()"\n                    >\n                    </qds-icon-button>\n\n                    <mat-menu\n                        #breadcrumbMenu="matMenu"\n                        class="ds-menu ds-breadcrumbs__menu"\n                        (opened)="onMenuOpened()"\n                    >\n                        <button\n                            *ngFor="\n                                let breadcrumb of getMiddleBreadcrumbs();\n                                let i = index\n                            "\n                            mat-menu-item\n                            class="ds-menu__item"\n                            (click)="handleMenuItemClick(breadcrumb)"\n                        >\n                            <span\n                                #menuTextRef\n                                [attr.data-index]="i"\n                                [matTooltip]="\n                                    isTruncated(i, true) ? breadcrumb.label : \'\'\n                                "\n                                [matTooltipDisabled]="!isTruncated(i, true)"\n                                matTooltipPosition="after"\n                            >\n                                {{ breadcrumb.label }}\n                            </span>\n                        </button>\n                    </mat-menu>\n                </div>\n\n                <div class="ds-breadcrumbs__item">\n                    <ng-container\n                        [ngTemplateOutlet]="breadcrumbContent"\n                        [ngTemplateOutletContext]="{\n                            breadcrumb: getLastBreadcrumb(),\n                            index: breadcrumbs.length - 1,\n                            isInMenu: false\n                        }"\n                    >\n                    </ng-container>\n                </div>\n            </ng-template>\n        </div>\n\n        \x3c!-- Template for breadcrumb content --\x3e\n        <ng-template\n            #breadcrumbContent\n            let-breadcrumb="breadcrumb"\n            let-index="index"\n            let-isInMenu="isInMenu"\n        >\n            <ng-container *ngIf="breadcrumb.href; else spanContent">\n                <a\n                    [href]="breadcrumb.href"\n                    #textRef\n                    [attr.data-index]="index"\n                    [attr.data-is-menu]="isInMenu"\n                    [matTooltip]="\n                        isTruncated(index, isInMenu) ? breadcrumb.label : \'\'\n                    "\n                    matTooltipPosition="above"\n                    [matTooltipDisabled]="!isTruncated(index, isInMenu)"\n                >\n                    {{ breadcrumb.label }}\n                </a>\n            </ng-container>\n\n            <ng-template #spanContent>\n                <span\n                    #textRef\n                    [attr.data-index]="index"\n                    [attr.data-is-menu]="isInMenu"\n                    [matTooltip]="\n                        isTruncated(index, isInMenu) ? breadcrumb.label : \'\'\n                    "\n                    matTooltipPosition="above"\n                    [matTooltipDisabled]="!isTruncated(index, isInMenu)"\n                >\n                    {{ breadcrumb.label }}\n                </span>\n            </ng-template>\n        </ng-template>\n    '})],QDSBreadcrumbComponent);const breadcrumb_stories={title:"Components/Breadcrumb",component:QDSBreadcrumbComponent,parameters:{layout:"centered",actions:{disable:!0},interactions:{disable:!0}},tags:["autodocs","!dev"]},BasicBreadcrumb={args:{breadcrumbs:[{label:"Back to results",href:"/"},{label:"Sally Jupiter lab results",href:"/sally-jupiter-lab-results"},{label:"CBC with differential test results",href:null}]},argTypes:{customClasses:{table:{disable:!0}}}},BreadcrumbWithDropdown={args:{breadcrumbs:[{label:"Back to results",href:"/"},{label:"Sally Jupiter lab results",href:"/sally-jupiter-lab-results"},{label:"CBC with differential test results",href:"/cbc-with-differential-test-results"},{label:"CBC extended",href:null}]},argTypes:{...BasicBreadcrumb.argTypes}},__namedExportsOrder=["BasicBreadcrumb","BreadcrumbWithDropdown"];BasicBreadcrumb.parameters={...BasicBreadcrumb.parameters,docs:{...BasicBreadcrumb.parameters?.docs,source:{originalSource:"{\n  args: {\n    breadcrumbs: items\n  },\n  argTypes: {\n    customClasses: {\n      table: {\n        disable: true\n      }\n    }\n  }\n}",...BasicBreadcrumb.parameters?.docs?.source}}},BreadcrumbWithDropdown.parameters={...BreadcrumbWithDropdown.parameters,docs:{...BreadcrumbWithDropdown.parameters?.docs,source:{originalSource:"{\n  args: {\n    breadcrumbs: itemsExt\n  },\n  argTypes: {\n    ...BasicBreadcrumb.argTypes\n  }\n}",...BreadcrumbWithDropdown.parameters?.docs?.source}}}},"./src/stories/button/icon-button.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{R:()=>QDSIconButtonComponent});var tslib__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),_angular_core__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),_angular_common__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@angular/common/fesm2022/common_module-Dx7dWex5.mjs"),_angular_material_menu__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@angular/material/fesm2022/menu.mjs"),_icon_icon_component__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/stories/icon/icon.component.ts"),_tooltip_tooltip_component__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/stories/tooltip/tooltip.component.ts");let QDSIconButtonComponent=class QDSIconButtonComponent{onClick(event){this.clickHandler.emit(event)}getButtonClasses(){return{"ds-button":!0,"--icon":!0,[this.customClasses]:!!this.customClasses,[`--${this.size}`]:!!this.size,"--destructive":this.isDestructive,"--disabled":this.isDisabled,"--inverse":this.isInverse}}constructor(el,renderer){this.el=el,this.renderer=renderer,this.customClasses="",this.icon="",this.isDestructive=!1,this.isDisabled=!1,this.isInverse=!1,this.matMenuTriggerFor=null,this.size="lg",this.tooltip="",this.tooltipPlacement="above",this.clickHandler=new _angular_core__WEBPACK_IMPORTED_MODULE_2__.EventEmitter}ngAfterViewInit(){this.el.nativeElement.getAttributeNames().forEach((attr=>this.renderer.removeAttribute(this.el.nativeElement,attr)))}static{this.ctorParameters=()=>[{type:_angular_core__WEBPACK_IMPORTED_MODULE_2__.ElementRef},{type:_angular_core__WEBPACK_IMPORTED_MODULE_2__.Renderer2}]}static{this.propDecorators={customClasses:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_2__.Input}],icon:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_2__.Input}],isDestructive:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_2__.Input}],isDisabled:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_2__.Input}],isInverse:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_2__.Input}],matMenuTriggerFor:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_2__.Input}],size:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_2__.Input}],tooltip:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_2__.Input}],tooltipPlacement:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_2__.Input}],clickHandler:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_2__.Output}]}}};QDSIconButtonComponent=(0,tslib__WEBPACK_IMPORTED_MODULE_3__.Cg)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_2__.Component)({selector:"qds-icon-button",standalone:!0,imports:[_angular_common__WEBPACK_IMPORTED_MODULE_4__.MD,_angular_material_menu__WEBPACK_IMPORTED_MODULE_5__.Cn,_icon_icon_component__WEBPACK_IMPORTED_MODULE_0__.$,_tooltip_tooltip_component__WEBPACK_IMPORTED_MODULE_1__.t],template:'\n        <ng-container *ngIf="tooltip; else noTooltip">\n            <qds-tooltip [message]="tooltip" [position]="tooltipPlacement">\n                <button\n                    [ngClass]="getButtonClasses()"\n                    [attr.aria-label]="icon"\n                    (click)="onClick($event)"\n                    [disabled]="isDisabled"\n                    [matMenuTriggerFor]="matMenuTriggerFor"\n                >\n                    <qds-icon name="{{ icon }}" />\n                </button>\n            </qds-tooltip>\n        </ng-container>\n        <ng-template #noTooltip>\n            <button\n                [ngClass]="getButtonClasses()"\n                [attr.aria-label]="icon"\n                (click)="onClick($event)"\n                [disabled]="isDisabled"\n                [matMenuTriggerFor]="matMenuTriggerFor"\n            >\n                <qds-icon name="{{ icon }}" />\n            </button>\n        </ng-template>\n    '})],QDSIconButtonComponent)},"./src/stories/icon/icon.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{$:()=>QDSIconComponent});var tslib__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),_angular_core__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),_angular_common__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@angular/common/fesm2022/common_module-Dx7dWex5.mjs");let QDSIconComponent=class QDSIconComponent{getIconClasses(){return{[`ds-icon--${this.name}`]:!!this.name,[this.customClasses]:!!this.customClasses,[this.getColor()]:!!this.color,[this.getSize()]:!!this.size,matPrefix:!!this.matPrefix,matSuffix:!!this.matSuffix}}getColor(){return`ds-${this.color}`}getSize(){return`ds-font-${this.size}`}constructor(el,renderer){this.el=el,this.renderer=renderer,this.customClasses="",this.color="",this.matPrefix=!1,this.matSuffix=!1,this.name="",this.size=""}ngAfterViewInit(){this.el.nativeElement.getAttributeNames().forEach((attr=>this.renderer.removeAttribute(this.el.nativeElement,attr)))}static{this.ctorParameters=()=>[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef},{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Renderer2}]}static{this.propDecorators={customClasses:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input}],color:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input}],matPrefix:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input}],matSuffix:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input}],name:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input}],size:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input}]}}};QDSIconComponent=(0,tslib__WEBPACK_IMPORTED_MODULE_1__.Cg)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Component)({selector:"qds-icon",standalone:!0,imports:[_angular_common__WEBPACK_IMPORTED_MODULE_2__.MD],template:'\n        <span\n            [ngClass]="getIconClasses()"\n            [attr.aria-label]="name"\n            role="img"\n        ></span>\n    '})],QDSIconComponent)},"./src/stories/tooltip/tooltip.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{t:()=>QDSTooltipComponent});var tslib__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),_angular_core__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),_angular_material_tooltip__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@angular/material/fesm2022/module-C9K6ZqpI.mjs");let QDSTooltipComponent=class QDSTooltipComponent{constructor(el,renderer){this.el=el,this.renderer=renderer,this.message="",this.position="above"}ngAfterViewInit(){this.el.nativeElement.getAttributeNames().forEach((attr=>this.renderer.removeAttribute(this.el.nativeElement,attr)))}static{this.ctorParameters=()=>[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef},{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Renderer2}]}static{this.propDecorators={message:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input}],position:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input}],tooltip:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewChild,args:["tooltip",{static:!0}]}],trigger:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewChild,args:["trigger",{static:!0}]}]}}};QDSTooltipComponent=(0,tslib__WEBPACK_IMPORTED_MODULE_1__.Cg)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Component)({selector:"qds-tooltip",standalone:!0,imports:[_angular_material_tooltip__WEBPACK_IMPORTED_MODULE_2__.h],template:'\n        <span\n            #tooltip="matTooltip"\n            matTooltip="{{ message }}"\n            [matTooltipPosition]="position"\n        >\n            <ng-content #trigger></ng-content>\n        </span>\n    '})],QDSTooltipComponent)}}]);