"use strict";(self.webpackChunksbdsp_angular=self.webpackChunksbdsp_angular||[]).push([[4431],{"./node_modules/@angular/material/fesm2022/autocomplete.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{jL:()=>MatAutocompleteModule});var option_ChV6uQgD=__webpack_require__("./node_modules/@angular/material/fesm2022/option-ChV6uQgD.mjs"),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),scrolling=__webpack_require__("./node_modules/@angular/cdk/fesm2022/scrolling.mjs"),overlay_module_BUj0D19H=__webpack_require__("./node_modules/@angular/cdk/fesm2022/overlay-module-BUj0D19H.mjs"),id_generator_Dw_9dSDu=__webpack_require__("./node_modules/@angular/cdk/fesm2022/id-generator-Dw_9dSDu.mjs"),activedescendant_key_manager_DC3_fwQI=__webpack_require__("./node_modules/@angular/cdk/fesm2022/activedescendant-key-manager-DC3-fwQI.mjs"),a11y=__webpack_require__("./node_modules/@angular/cdk/fesm2022/a11y.mjs"),platform_DmdVEw_C=__webpack_require__("./node_modules/@angular/cdk/fesm2022/platform-DmdVEw_C.mjs"),shadow_dom_B0oHn41l=__webpack_require__("./node_modules/@angular/cdk/fesm2022/shadow-dom-B0oHn41l.mjs"),Subscription=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/Subscription.js"),Subject=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/Subject.js"),merge=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/merge.js"),of=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/of.js"),defer=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/defer.js"),Observable=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/Observable.js"),directionality_CBXD4hga=__webpack_require__("./node_modules/@angular/cdk/fesm2022/directionality-CBXD4hga.mjs"),keycodes=__webpack_require__("./node_modules/@angular/cdk/fesm2022/keycodes.mjs"),keycodes_CpHkExLC=__webpack_require__("./node_modules/@angular/cdk/fesm2022/keycodes-CpHkExLC.mjs"),breakpoints_observer_CljOfYGy=__webpack_require__("./node_modules/@angular/cdk/fesm2022/breakpoints-observer-CljOfYGy.mjs"),layout=__webpack_require__("./node_modules/@angular/cdk/fesm2022/layout.mjs"),portal_directives_Bw5woq8I=__webpack_require__("./node_modules/@angular/cdk/fesm2022/portal-directives-Bw5woq8I.mjs"),fesm2022_forms=__webpack_require__("./node_modules/@angular/forms/fesm2022/forms.mjs"),filter=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/filter.js"),map=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/map.js"),startWith=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/startWith.js"),switchMap=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/switchMap.js"),tap=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/tap.js"),scheduler_async=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/scheduler/async.js"),concat=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/concat.js"),take=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/take.js"),lift=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/lift.js"),OperatorSubscriber=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js"),noop=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/noop.js");var mapTo=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/mapTo.js"),mergeMap=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/mergeMap.js"),innerFrom=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/innerFrom.js");function delayWhen(delayDurationSelector,subscriptionDelay){return subscriptionDelay?function(source){return(0,concat.x)(subscriptionDelay.pipe((0,take.s)(1),function ignoreElements(){return(0,lift.N)((function(source,subscriber){source.subscribe((0,OperatorSubscriber._)(subscriber,noop.l))}))}()),source.pipe(delayWhen(delayDurationSelector)))}:(0,mergeMap.Z)((function(value,index){return(0,innerFrom.Tg)(delayDurationSelector(value,index)).pipe((0,take.s)(1),(0,mapTo.u)(value))}))}var timer=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/timer.js");var form_field_B4o2BB25=__webpack_require__("./node_modules/@angular/material/fesm2022/form-field-B4o2BB25.mjs"),index_DOxJc1m4=__webpack_require__("./node_modules/@angular/material/fesm2022/index-DOxJc1m4.mjs"),common_module_WayjW0Pb=__webpack_require__("./node_modules/@angular/material/fesm2022/common-module-WayjW0Pb.mjs");const _c0=["panel"],_c1=["*"];function MatAutocomplete_ng_template_0_Template(rf,ctx){if(1&rf&&(core["ɵɵelementStart"](0,"div",1,0),core["ɵɵprojection"](2),core["ɵɵelementEnd"]()),2&rf){const formFieldId_r1=ctx.id,ctx_r1=core["ɵɵnextContext"]();core["ɵɵclassMap"](ctx_r1._classList),core["ɵɵclassProp"]("mat-mdc-autocomplete-visible",ctx_r1.showPanel)("mat-mdc-autocomplete-hidden",!ctx_r1.showPanel)("mat-autocomplete-panel-animations-enabled",!ctx_r1._animationsDisabled)("mat-primary","primary"===ctx_r1._color)("mat-accent","accent"===ctx_r1._color)("mat-warn","warn"===ctx_r1._color),core["ɵɵproperty"]("id",ctx_r1.id),core["ɵɵattribute"]("aria-label",ctx_r1.ariaLabel||null)("aria-labelledby",ctx_r1._getPanelAriaLabelledby(formFieldId_r1))}}class MatAutocompleteSelectedEvent{source;option;constructor(source,option){this.source=source,this.option=option}}const MAT_AUTOCOMPLETE_DEFAULT_OPTIONS=new core.InjectionToken("mat-autocomplete-default-options",{providedIn:"root",factory:function MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY(){return{autoActiveFirstOption:!1,autoSelectActiveOption:!1,hideSingleSelectionIndicator:!1,requireSelection:!1,hasBackdrop:!1}}});class MatAutocomplete{_changeDetectorRef=(0,core.inject)(core.ChangeDetectorRef);_elementRef=(0,core.inject)(core.ElementRef);_defaults=(0,core.inject)(MAT_AUTOCOMPLETE_DEFAULT_OPTIONS);_animationsDisabled="NoopAnimations"===(0,core.inject)(core.ANIMATION_MODULE_TYPE,{optional:!0});_activeOptionChanges=Subscription.yU.EMPTY;_keyManager;showPanel=!1;get isOpen(){return this._isOpen&&this.showPanel}_isOpen=!1;_latestOpeningTrigger;_setColor(value){this._color=value,this._changeDetectorRef.markForCheck()}_color;template;panel;options;optionGroups;ariaLabel;ariaLabelledby;displayWith=null;autoActiveFirstOption;autoSelectActiveOption;requireSelection;panelWidth;disableRipple;optionSelected=new core.EventEmitter;opened=new core.EventEmitter;closed=new core.EventEmitter;optionActivated=new core.EventEmitter;set classList(value){this._classList=value,this._elementRef.nativeElement.className=""}_classList;get hideSingleSelectionIndicator(){return this._hideSingleSelectionIndicator}set hideSingleSelectionIndicator(value){this._hideSingleSelectionIndicator=value,this._syncParentProperties()}_hideSingleSelectionIndicator;_syncParentProperties(){if(this.options)for(const option of this.options)option._changeDetectorRef.markForCheck()}id=(0,core.inject)(id_generator_Dw_9dSDu._).getId("mat-autocomplete-");inertGroups;constructor(){const platform=(0,core.inject)(platform_DmdVEw_C.P);this.inertGroups=platform?.SAFARI||!1,this.autoActiveFirstOption=!!this._defaults.autoActiveFirstOption,this.autoSelectActiveOption=!!this._defaults.autoSelectActiveOption,this.requireSelection=!!this._defaults.requireSelection,this._hideSingleSelectionIndicator=this._defaults.hideSingleSelectionIndicator??!1}ngAfterContentInit(){this._keyManager=new activedescendant_key_manager_DC3_fwQI.A(this.options).withWrap().skipPredicate(this._skipPredicate),this._activeOptionChanges=this._keyManager.change.subscribe((index=>{this.isOpen&&this.optionActivated.emit({source:this,option:this.options.toArray()[index]||null})})),this._setVisibility()}ngOnDestroy(){this._keyManager?.destroy(),this._activeOptionChanges.unsubscribe()}_setScrollTop(scrollTop){this.panel&&(this.panel.nativeElement.scrollTop=scrollTop)}_getScrollTop(){return this.panel?this.panel.nativeElement.scrollTop:0}_setVisibility(){this.showPanel=!!this.options?.length,this._changeDetectorRef.markForCheck()}_emitSelectEvent(option){const event=new MatAutocompleteSelectedEvent(this,option);this.optionSelected.emit(event)}_getPanelAriaLabelledby(labelId){if(this.ariaLabel)return null;const labelExpression=labelId?labelId+" ":"";return this.ariaLabelledby?labelExpression+this.ariaLabelledby:labelId}_skipPredicate(){return!1}static ɵfac=function MatAutocomplete_Factory(__ngFactoryType__){return new(__ngFactoryType__||MatAutocomplete)};static ɵcmp=core["ɵɵdefineComponent"]({type:MatAutocomplete,selectors:[["mat-autocomplete"]],contentQueries:function MatAutocomplete_ContentQueries(rf,ctx,dirIndex){if(1&rf&&(core["ɵɵcontentQuery"](dirIndex,option_ChV6uQgD.M,5),core["ɵɵcontentQuery"](dirIndex,option_ChV6uQgD.d,5)),2&rf){let _t;core["ɵɵqueryRefresh"](_t=core["ɵɵloadQuery"]())&&(ctx.options=_t),core["ɵɵqueryRefresh"](_t=core["ɵɵloadQuery"]())&&(ctx.optionGroups=_t)}},viewQuery:function MatAutocomplete_Query(rf,ctx){if(1&rf&&(core["ɵɵviewQuery"](core.TemplateRef,7),core["ɵɵviewQuery"](_c0,5)),2&rf){let _t;core["ɵɵqueryRefresh"](_t=core["ɵɵloadQuery"]())&&(ctx.template=_t.first),core["ɵɵqueryRefresh"](_t=core["ɵɵloadQuery"]())&&(ctx.panel=_t.first)}},hostAttrs:[1,"mat-mdc-autocomplete"],inputs:{ariaLabel:[0,"aria-label","ariaLabel"],ariaLabelledby:[0,"aria-labelledby","ariaLabelledby"],displayWith:"displayWith",autoActiveFirstOption:[2,"autoActiveFirstOption","autoActiveFirstOption",core.booleanAttribute],autoSelectActiveOption:[2,"autoSelectActiveOption","autoSelectActiveOption",core.booleanAttribute],requireSelection:[2,"requireSelection","requireSelection",core.booleanAttribute],panelWidth:"panelWidth",disableRipple:[2,"disableRipple","disableRipple",core.booleanAttribute],classList:[0,"class","classList"],hideSingleSelectionIndicator:[2,"hideSingleSelectionIndicator","hideSingleSelectionIndicator",core.booleanAttribute]},outputs:{optionSelected:"optionSelected",opened:"opened",closed:"closed",optionActivated:"optionActivated"},exportAs:["matAutocomplete"],features:[core["ɵɵProvidersFeature"]([{provide:option_ChV6uQgD.c,useExisting:MatAutocomplete}])],ngContentSelectors:_c1,decls:1,vars:0,consts:[["panel",""],["role","listbox",1,"mat-mdc-autocomplete-panel","mdc-menu-surface","mdc-menu-surface--open",3,"id"]],template:function MatAutocomplete_Template(rf,ctx){1&rf&&(core["ɵɵprojectionDef"](),core["ɵɵtemplate"](0,MatAutocomplete_ng_template_0_Template,3,17,"ng-template"))},styles:["div.mat-mdc-autocomplete-panel{width:100%;max-height:256px;visibility:hidden;transform-origin:center top;overflow:auto;padding:8px 0;box-sizing:border-box;position:relative;border-radius:var(--mat-autocomplete-container-shape, var(--mat-sys-corner-extra-small));box-shadow:var(--mat-autocomplete-container-elevation-shadow, 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12));background-color:var(--mat-autocomplete-background-color, var(--mat-sys-surface-container))}@media(forced-colors: active){div.mat-mdc-autocomplete-panel{outline:solid 1px}}.cdk-overlay-pane:not(.mat-mdc-autocomplete-panel-above) div.mat-mdc-autocomplete-panel{border-top-left-radius:0;border-top-right-radius:0}.mat-mdc-autocomplete-panel-above div.mat-mdc-autocomplete-panel{border-bottom-left-radius:0;border-bottom-right-radius:0;transform-origin:center bottom}div.mat-mdc-autocomplete-panel.mat-mdc-autocomplete-visible{visibility:visible}div.mat-mdc-autocomplete-panel.mat-mdc-autocomplete-hidden{visibility:hidden;pointer-events:none}@keyframes _mat-autocomplete-enter{from{opacity:0;transform:scaleY(0.8)}to{opacity:1;transform:none}}.mat-autocomplete-panel-animations-enabled{animation:_mat-autocomplete-enter 120ms cubic-bezier(0, 0, 0.2, 1)}mat-autocomplete{display:none}\n"],encapsulation:2,changeDetection:0})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](MatAutocomplete,[{type:core.Component,args:[{selector:"mat-autocomplete",encapsulation:core.ViewEncapsulation.None,changeDetection:core.ChangeDetectionStrategy.OnPush,exportAs:"matAutocomplete",host:{class:"mat-mdc-autocomplete"},providers:[{provide:option_ChV6uQgD.c,useExisting:MatAutocomplete}],template:'<ng-template let-formFieldId="id">\n  <div\n    class="mat-mdc-autocomplete-panel mdc-menu-surface mdc-menu-surface--open"\n    role="listbox"\n    [id]="id"\n    [class]="_classList"\n    [class.mat-mdc-autocomplete-visible]="showPanel"\n    [class.mat-mdc-autocomplete-hidden]="!showPanel"\n    [class.mat-autocomplete-panel-animations-enabled]="!_animationsDisabled"\n    [class.mat-primary]="_color === \'primary\'"\n    [class.mat-accent]="_color === \'accent\'"\n    [class.mat-warn]="_color === \'warn\'"\n    [attr.aria-label]="ariaLabel || null"\n    [attr.aria-labelledby]="_getPanelAriaLabelledby(formFieldId)"\n    #panel>\n    <ng-content></ng-content>\n  </div>\n</ng-template>\n',styles:["div.mat-mdc-autocomplete-panel{width:100%;max-height:256px;visibility:hidden;transform-origin:center top;overflow:auto;padding:8px 0;box-sizing:border-box;position:relative;border-radius:var(--mat-autocomplete-container-shape, var(--mat-sys-corner-extra-small));box-shadow:var(--mat-autocomplete-container-elevation-shadow, 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12));background-color:var(--mat-autocomplete-background-color, var(--mat-sys-surface-container))}@media(forced-colors: active){div.mat-mdc-autocomplete-panel{outline:solid 1px}}.cdk-overlay-pane:not(.mat-mdc-autocomplete-panel-above) div.mat-mdc-autocomplete-panel{border-top-left-radius:0;border-top-right-radius:0}.mat-mdc-autocomplete-panel-above div.mat-mdc-autocomplete-panel{border-bottom-left-radius:0;border-bottom-right-radius:0;transform-origin:center bottom}div.mat-mdc-autocomplete-panel.mat-mdc-autocomplete-visible{visibility:visible}div.mat-mdc-autocomplete-panel.mat-mdc-autocomplete-hidden{visibility:hidden;pointer-events:none}@keyframes _mat-autocomplete-enter{from{opacity:0;transform:scaleY(0.8)}to{opacity:1;transform:none}}.mat-autocomplete-panel-animations-enabled{animation:_mat-autocomplete-enter 120ms cubic-bezier(0, 0, 0.2, 1)}mat-autocomplete{display:none}\n"]}]}],(()=>[]),{template:[{type:core.ViewChild,args:[core.TemplateRef,{static:!0}]}],panel:[{type:core.ViewChild,args:["panel"]}],options:[{type:core.ContentChildren,args:[option_ChV6uQgD.M,{descendants:!0}]}],optionGroups:[{type:core.ContentChildren,args:[option_ChV6uQgD.d,{descendants:!0}]}],ariaLabel:[{type:core.Input,args:["aria-label"]}],ariaLabelledby:[{type:core.Input,args:["aria-labelledby"]}],displayWith:[{type:core.Input}],autoActiveFirstOption:[{type:core.Input,args:[{transform:core.booleanAttribute}]}],autoSelectActiveOption:[{type:core.Input,args:[{transform:core.booleanAttribute}]}],requireSelection:[{type:core.Input,args:[{transform:core.booleanAttribute}]}],panelWidth:[{type:core.Input}],disableRipple:[{type:core.Input,args:[{transform:core.booleanAttribute}]}],optionSelected:[{type:core.Output}],opened:[{type:core.Output}],closed:[{type:core.Output}],optionActivated:[{type:core.Output}],classList:[{type:core.Input,args:["class"]}],hideSingleSelectionIndicator:[{type:core.Input,args:[{transform:core.booleanAttribute}]}]});class MatAutocompleteOrigin{elementRef=(0,core.inject)(core.ElementRef);constructor(){}static ɵfac=function MatAutocompleteOrigin_Factory(__ngFactoryType__){return new(__ngFactoryType__||MatAutocompleteOrigin)};static ɵdir=core["ɵɵdefineDirective"]({type:MatAutocompleteOrigin,selectors:[["","matAutocompleteOrigin",""]],exportAs:["matAutocompleteOrigin"]})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](MatAutocompleteOrigin,[{type:core.Directive,args:[{selector:"[matAutocompleteOrigin]",exportAs:"matAutocompleteOrigin"}]}],(()=>[]),null);const MAT_AUTOCOMPLETE_VALUE_ACCESSOR={provide:fesm2022_forms.kq,useExisting:(0,core.forwardRef)((()=>MatAutocompleteTrigger)),multi:!0};const MAT_AUTOCOMPLETE_SCROLL_STRATEGY=new core.InjectionToken("mat-autocomplete-scroll-strategy",{providedIn:"root",factory:()=>{const overlay=(0,core.inject)(overlay_module_BUj0D19H.a);return()=>overlay.scrollStrategies.reposition()}});const MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER={provide:MAT_AUTOCOMPLETE_SCROLL_STRATEGY,deps:[overlay_module_BUj0D19H.a],useFactory:function MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY(overlay){return()=>overlay.scrollStrategies.reposition()}};class MatAutocompleteTrigger{_environmentInjector=(0,core.inject)(core.EnvironmentInjector);_element=(0,core.inject)(core.ElementRef);_overlay=(0,core.inject)(overlay_module_BUj0D19H.a);_viewContainerRef=(0,core.inject)(core.ViewContainerRef);_zone=(0,core.inject)(core.NgZone);_changeDetectorRef=(0,core.inject)(core.ChangeDetectorRef);_dir=(0,core.inject)(directionality_CBXD4hga.D,{optional:!0});_formField=(0,core.inject)(form_field_B4o2BB25.h,{optional:!0,host:!0});_viewportRuler=(0,core.inject)(scrolling.Xj);_scrollStrategy=(0,core.inject)(MAT_AUTOCOMPLETE_SCROLL_STRATEGY);_renderer=(0,core.inject)(core.Renderer2);_defaults=(0,core.inject)(MAT_AUTOCOMPLETE_DEFAULT_OPTIONS,{optional:!0});_overlayRef;_portal;_componentDestroyed=!1;_initialized=new Subject.B;_keydownSubscription;_outsideClickSubscription;_cleanupWindowBlur;_previousValue;_valueOnAttach;_valueOnLastKeydown;_positionStrategy;_manuallyFloatingLabel=!1;_closingActionsSubscription;_viewportSubscription=Subscription.yU.EMPTY;_breakpointObserver=(0,core.inject)(breakpoints_observer_CljOfYGy.B);_handsetLandscapeSubscription=Subscription.yU.EMPTY;_canOpenOnNextFocus=!0;_valueBeforeAutoSelection;_pendingAutoselectedOption;_closeKeyEventStream=new Subject.B;_windowBlurHandler=()=>{this._canOpenOnNextFocus=this.panelOpen||!this._hasFocus()};_onChange=()=>{};_onTouched=()=>{};autocomplete;position="auto";connectedTo;autocompleteAttribute="off";autocompleteDisabled;constructor(){}_aboveClass="mat-mdc-autocomplete-panel-above";ngAfterViewInit(){this._initialized.next(),this._initialized.complete(),this._cleanupWindowBlur=this._renderer.listen("window","blur",this._windowBlurHandler)}ngOnChanges(changes){changes.position&&this._positionStrategy&&(this._setStrategyPositions(this._positionStrategy),this.panelOpen&&this._overlayRef.updatePosition())}ngOnDestroy(){this._cleanupWindowBlur?.(),this._handsetLandscapeSubscription.unsubscribe(),this._viewportSubscription.unsubscribe(),this._componentDestroyed=!0,this._destroyPanel(),this._closeKeyEventStream.complete(),this._clearFromModal()}get panelOpen(){return this._overlayAttached&&this.autocomplete.showPanel}_overlayAttached=!1;openPanel(){this._openPanelInternal()}closePanel(){this._resetLabel(),this._overlayAttached&&(this.panelOpen&&this._zone.run((()=>{this.autocomplete.closed.emit()})),this.autocomplete._latestOpeningTrigger===this&&(this.autocomplete._isOpen=!1,this.autocomplete._latestOpeningTrigger=null),this._overlayAttached=!1,this._pendingAutoselectedOption=null,this._overlayRef&&this._overlayRef.hasAttached()&&(this._overlayRef.detach(),this._closingActionsSubscription.unsubscribe()),this._updatePanelState(),this._componentDestroyed||this._changeDetectorRef.detectChanges(),this._trackedModal&&(0,a11y.Ae)(this._trackedModal,"aria-owns",this.autocomplete.id))}updatePosition(){this._overlayAttached&&this._overlayRef.updatePosition()}get panelClosingActions(){return(0,merge.h)(this.optionSelections,this.autocomplete._keyManager.tabOut.pipe((0,filter.p)((()=>this._overlayAttached))),this._closeKeyEventStream,this._getOutsideClickStream(),this._overlayRef?this._overlayRef.detachments().pipe((0,filter.p)((()=>this._overlayAttached))):(0,of.of)()).pipe((0,map.T)((event=>event instanceof option_ChV6uQgD.e?event:null)))}optionSelections=(0,defer.v)((()=>{const options=this.autocomplete?this.autocomplete.options:null;return options?options.changes.pipe((0,startWith.Z)(options),(0,switchMap.n)((()=>(0,merge.h)(...options.map((option=>option.onSelectionChange)))))):this._initialized.pipe((0,switchMap.n)((()=>this.optionSelections)))}));get activeOption(){return this.autocomplete&&this.autocomplete._keyManager?this.autocomplete._keyManager.activeItem:null}_getOutsideClickStream(){return new Observable.c((observer=>{const listener=event=>{const clickTarget=(0,shadow_dom_B0oHn41l._)(event),formField=this._formField?this._formField.getConnectedOverlayOrigin().nativeElement:null,customOrigin=this.connectedTo?this.connectedTo.elementRef.nativeElement:null;!this._overlayAttached||clickTarget===this._element.nativeElement||this._hasFocus()||formField&&formField.contains(clickTarget)||customOrigin&&customOrigin.contains(clickTarget)||!this._overlayRef||this._overlayRef.overlayElement.contains(clickTarget)||observer.next(event)},cleanups=[this._renderer.listen("document","click",listener),this._renderer.listen("document","auxclick",listener),this._renderer.listen("document","touchend",listener)];return()=>{cleanups.forEach((current=>current()))}}))}writeValue(value){Promise.resolve(null).then((()=>this._assignOptionValue(value)))}registerOnChange(fn){this._onChange=fn}registerOnTouched(fn){this._onTouched=fn}setDisabledState(isDisabled){this._element.nativeElement.disabled=isDisabled}_handleKeydown(event){const keyCode=event.keyCode,hasModifier=(0,keycodes.rp)(event);if(keyCode!==keycodes_CpHkExLC.g||hasModifier||event.preventDefault(),this._valueOnLastKeydown=this._element.nativeElement.value,this.activeOption&&keyCode===keycodes_CpHkExLC.c&&this.panelOpen&&!hasModifier)this.activeOption._selectViaInteraction(),this._resetActiveItem(),event.preventDefault();else if(this.autocomplete){const prevActiveItem=this.autocomplete._keyManager.activeItem,isArrowKey=keyCode===keycodes_CpHkExLC.U||keyCode===keycodes_CpHkExLC.D;keyCode===keycodes_CpHkExLC.T||isArrowKey&&!hasModifier&&this.panelOpen?this.autocomplete._keyManager.onKeydown(event):isArrowKey&&this._canOpen()&&this._openPanelInternal(this._valueOnLastKeydown),(isArrowKey||this.autocomplete._keyManager.activeItem!==prevActiveItem)&&(this._scrollToOption(this.autocomplete._keyManager.activeItemIndex||0),this.autocomplete.autoSelectActiveOption&&this.activeOption&&(this._pendingAutoselectedOption||(this._valueBeforeAutoSelection=this._valueOnLastKeydown),this._pendingAutoselectedOption=this.activeOption,this._assignOptionValue(this.activeOption.value)))}}_handleInput(event){let target=event.target,value=target.value;if("number"===target.type&&(value=""==value?null:parseFloat(value)),this._previousValue!==value){if(this._previousValue=value,this._pendingAutoselectedOption=null,this.autocomplete&&this.autocomplete.requireSelection||this._onChange(value),value){if(this.panelOpen&&!this.autocomplete.requireSelection){const selectedOption=this.autocomplete.options?.find((option=>option.selected));if(selectedOption){value!==this._getDisplayValue(selectedOption.value)&&selectedOption.deselect(!1)}}}else this._clearPreviousSelectedOption(null,!1);if(this._canOpen()&&this._hasFocus()){const valueOnAttach=this._valueOnLastKeydown??this._element.nativeElement.value;this._valueOnLastKeydown=null,this._openPanelInternal(valueOnAttach)}}}_handleFocus(){this._canOpenOnNextFocus?this._canOpen()&&(this._previousValue=this._element.nativeElement.value,this._attachOverlay(this._previousValue),this._floatLabel(!0)):this._canOpenOnNextFocus=!0}_handleClick(){this._canOpen()&&!this.panelOpen&&this._openPanelInternal()}_hasFocus(){return(0,shadow_dom_B0oHn41l.c)()===this._element.nativeElement}_floatLabel(shouldAnimate=!1){this._formField&&"auto"===this._formField.floatLabel&&(shouldAnimate?this._formField._animateAndLockLabel():this._formField.floatLabel="always",this._manuallyFloatingLabel=!0)}_resetLabel(){this._manuallyFloatingLabel&&(this._formField&&(this._formField.floatLabel="auto"),this._manuallyFloatingLabel=!1)}_subscribeToClosingActions(){const initialRender=new Observable.c((subscriber=>{(0,core.afterNextRender)((()=>{subscriber.next()}),{injector:this._environmentInjector})})),optionChanges=this.autocomplete.options?.changes.pipe((0,tap.M)((()=>this._positionStrategy.reapplyLastPosition())),function delay(due,scheduler){void 0===scheduler&&(scheduler=scheduler_async.E);var duration=(0,timer.O)(due,scheduler);return delayWhen((function(){return duration}))}(0))??(0,of.of)();return(0,merge.h)(initialRender,optionChanges).pipe((0,switchMap.n)((()=>this._zone.run((()=>{const wasOpen=this.panelOpen;return this._resetActiveItem(),this._updatePanelState(),this._changeDetectorRef.detectChanges(),this.panelOpen&&this._overlayRef.updatePosition(),wasOpen!==this.panelOpen&&(this.panelOpen?this._emitOpened():this.autocomplete.closed.emit()),this.panelClosingActions})))),(0,take.s)(1)).subscribe((event=>this._setValueAndClose(event)))}_emitOpened(){this.autocomplete.opened.emit()}_destroyPanel(){this._overlayRef&&(this.closePanel(),this._overlayRef.dispose(),this._overlayRef=null)}_getDisplayValue(value){const autocomplete=this.autocomplete;return autocomplete&&autocomplete.displayWith?autocomplete.displayWith(value):value}_assignOptionValue(value){const toDisplay=this._getDisplayValue(value);null==value&&this._clearPreviousSelectedOption(null,!1),this._updateNativeInputValue(null!=toDisplay?toDisplay:"")}_updateNativeInputValue(value){this._formField?this._formField._control.value=value:this._element.nativeElement.value=value,this._previousValue=value}_setValueAndClose(event){const panel=this.autocomplete,toSelect=event?event.source:this._pendingAutoselectedOption;toSelect?(this._clearPreviousSelectedOption(toSelect),this._assignOptionValue(toSelect.value),this._onChange(toSelect.value),panel._emitSelectEvent(toSelect),this._element.nativeElement.focus()):panel.requireSelection&&this._element.nativeElement.value!==this._valueOnAttach&&(this._clearPreviousSelectedOption(null),this._assignOptionValue(null),this._onChange(null)),this.closePanel()}_clearPreviousSelectedOption(skip,emitEvent){this.autocomplete?.options?.forEach((option=>{option!==skip&&option.selected&&option.deselect(emitEvent)}))}_openPanelInternal(valueOnAttach=this._element.nativeElement.value){if(this._attachOverlay(valueOnAttach),this._floatLabel(),this._trackedModal){const panelId=this.autocomplete.id;(0,a11y.px)(this._trackedModal,"aria-owns",panelId)}}_attachOverlay(valueOnAttach){if(!this.autocomplete&&("undefined"==typeof ngDevMode||ngDevMode))throw function getMatAutocompleteMissingPanelError(){return Error("Attempting to open an undefined instance of `mat-autocomplete`. Make sure that the id passed to the `matAutocomplete` is correct and that you're attempting to open it after the ngAfterContentInit hook.")}();let overlayRef=this._overlayRef;overlayRef?(this._positionStrategy.setOrigin(this._getConnectedElement()),overlayRef.updateSize({width:this._getPanelWidth()})):(this._portal=new portal_directives_Bw5woq8I.T(this.autocomplete.template,this._viewContainerRef,{id:this._formField?.getLabelId()}),overlayRef=this._overlay.create(this._getOverlayConfig()),this._overlayRef=overlayRef,this._viewportSubscription=this._viewportRuler.change().subscribe((()=>{this.panelOpen&&overlayRef&&overlayRef.updateSize({width:this._getPanelWidth()})})),this._handsetLandscapeSubscription=this._breakpointObserver.observe(layout.Rp.HandsetLandscape).subscribe((result=>{result.matches?this._positionStrategy.withFlexibleDimensions(!0).withGrowAfterOpen(!0).withViewportMargin(8):this._positionStrategy.withFlexibleDimensions(!1).withGrowAfterOpen(!1).withViewportMargin(0)}))),overlayRef&&!overlayRef.hasAttached()&&(overlayRef.attach(this._portal),this._valueOnAttach=valueOnAttach,this._valueOnLastKeydown=null,this._closingActionsSubscription=this._subscribeToClosingActions());const wasOpen=this.panelOpen;this.autocomplete._isOpen=this._overlayAttached=!0,this.autocomplete._latestOpeningTrigger=this,this.autocomplete._setColor(this._formField?.color),this._updatePanelState(),this._applyModalPanelOwnership(),this.panelOpen&&wasOpen!==this.panelOpen&&this._emitOpened()}_handlePanelKeydown=event=>{(event.keyCode===keycodes_CpHkExLC.g&&!(0,keycodes.rp)(event)||event.keyCode===keycodes_CpHkExLC.U&&(0,keycodes.rp)(event,"altKey"))&&(this._pendingAutoselectedOption&&(this._updateNativeInputValue(this._valueBeforeAutoSelection??""),this._pendingAutoselectedOption=null),this._closeKeyEventStream.next(),this._resetActiveItem(),event.stopPropagation(),event.preventDefault())};_updatePanelState(){if(this.autocomplete._setVisibility(),this.panelOpen){const overlayRef=this._overlayRef;this._keydownSubscription||(this._keydownSubscription=overlayRef.keydownEvents().subscribe(this._handlePanelKeydown)),this._outsideClickSubscription||(this._outsideClickSubscription=overlayRef.outsidePointerEvents().subscribe())}else this._keydownSubscription?.unsubscribe(),this._outsideClickSubscription?.unsubscribe(),this._keydownSubscription=this._outsideClickSubscription=null}_getOverlayConfig(){return new overlay_module_BUj0D19H.f({positionStrategy:this._getOverlayPosition(),scrollStrategy:this._scrollStrategy(),width:this._getPanelWidth(),direction:this._dir??void 0,hasBackdrop:this._defaults?.hasBackdrop,backdropClass:this._defaults?.backdropClass,panelClass:this._defaults?.overlayPanelClass})}_getOverlayPosition(){const strategy=this._overlay.position().flexibleConnectedTo(this._getConnectedElement()).withFlexibleDimensions(!1).withPush(!1);return this._setStrategyPositions(strategy),this._positionStrategy=strategy,strategy}_setStrategyPositions(positionStrategy){const belowPositions=[{originX:"start",originY:"bottom",overlayX:"start",overlayY:"top"},{originX:"end",originY:"bottom",overlayX:"end",overlayY:"top"}],panelClass=this._aboveClass,abovePositions=[{originX:"start",originY:"top",overlayX:"start",overlayY:"bottom",panelClass},{originX:"end",originY:"top",overlayX:"end",overlayY:"bottom",panelClass}];let positions;positions="above"===this.position?abovePositions:"below"===this.position?belowPositions:[...belowPositions,...abovePositions],positionStrategy.withPositions(positions)}_getConnectedElement(){return this.connectedTo?this.connectedTo.elementRef:this._formField?this._formField.getConnectedOverlayOrigin():this._element}_getPanelWidth(){return this.autocomplete.panelWidth||this._getHostWidth()}_getHostWidth(){return this._getConnectedElement().nativeElement.getBoundingClientRect().width}_resetActiveItem(){const autocomplete=this.autocomplete;if(autocomplete.autoActiveFirstOption){let firstEnabledOptionIndex=-1;for(let index=0;index<autocomplete.options.length;index++){if(!autocomplete.options.get(index).disabled){firstEnabledOptionIndex=index;break}}autocomplete._keyManager.setActiveItem(firstEnabledOptionIndex)}else autocomplete._keyManager.setActiveItem(-1)}_canOpen(){const element=this._element.nativeElement;return!element.readOnly&&!element.disabled&&!this.autocompleteDisabled}_scrollToOption(index){const autocomplete=this.autocomplete,labelCount=(0,option_ChV6uQgD._)(index,autocomplete.options,autocomplete.optionGroups);if(0===index&&1===labelCount)autocomplete._setScrollTop(0);else if(autocomplete.panel){const option=autocomplete.options.toArray()[index];if(option){const element=option._getHostElement(),newScrollPosition=(0,option_ChV6uQgD.b)(element.offsetTop,element.offsetHeight,autocomplete._getScrollTop(),autocomplete.panel.nativeElement.offsetHeight);autocomplete._setScrollTop(newScrollPosition)}}}_trackedModal=null;_applyModalPanelOwnership(){const modal=this._element.nativeElement.closest('body > .cdk-overlay-container [aria-modal="true"]');if(!modal)return;const panelId=this.autocomplete.id;this._trackedModal&&(0,a11y.Ae)(this._trackedModal,"aria-owns",panelId),(0,a11y.px)(modal,"aria-owns",panelId),this._trackedModal=modal}_clearFromModal(){if(this._trackedModal){const panelId=this.autocomplete.id;(0,a11y.Ae)(this._trackedModal,"aria-owns",panelId),this._trackedModal=null}}static ɵfac=function MatAutocompleteTrigger_Factory(__ngFactoryType__){return new(__ngFactoryType__||MatAutocompleteTrigger)};static ɵdir=core["ɵɵdefineDirective"]({type:MatAutocompleteTrigger,selectors:[["input","matAutocomplete",""],["textarea","matAutocomplete",""]],hostAttrs:[1,"mat-mdc-autocomplete-trigger"],hostVars:7,hostBindings:function MatAutocompleteTrigger_HostBindings(rf,ctx){1&rf&&core["ɵɵlistener"]("focusin",(function MatAutocompleteTrigger_focusin_HostBindingHandler(){return ctx._handleFocus()}))("blur",(function MatAutocompleteTrigger_blur_HostBindingHandler(){return ctx._onTouched()}))("input",(function MatAutocompleteTrigger_input_HostBindingHandler($event){return ctx._handleInput($event)}))("keydown",(function MatAutocompleteTrigger_keydown_HostBindingHandler($event){return ctx._handleKeydown($event)}))("click",(function MatAutocompleteTrigger_click_HostBindingHandler(){return ctx._handleClick()})),2&rf&&core["ɵɵattribute"]("autocomplete",ctx.autocompleteAttribute)("role",ctx.autocompleteDisabled?null:"combobox")("aria-autocomplete",ctx.autocompleteDisabled?null:"list")("aria-activedescendant",ctx.panelOpen&&ctx.activeOption?ctx.activeOption.id:null)("aria-expanded",ctx.autocompleteDisabled?null:ctx.panelOpen.toString())("aria-controls",ctx.autocompleteDisabled||!ctx.panelOpen||null==ctx.autocomplete?null:ctx.autocomplete.id)("aria-haspopup",ctx.autocompleteDisabled?null:"listbox")},inputs:{autocomplete:[0,"matAutocomplete","autocomplete"],position:[0,"matAutocompletePosition","position"],connectedTo:[0,"matAutocompleteConnectedTo","connectedTo"],autocompleteAttribute:[0,"autocomplete","autocompleteAttribute"],autocompleteDisabled:[2,"matAutocompleteDisabled","autocompleteDisabled",core.booleanAttribute]},exportAs:["matAutocompleteTrigger"],features:[core["ɵɵProvidersFeature"]([MAT_AUTOCOMPLETE_VALUE_ACCESSOR]),core["ɵɵNgOnChangesFeature"]]})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](MatAutocompleteTrigger,[{type:core.Directive,args:[{selector:"input[matAutocomplete], textarea[matAutocomplete]",host:{class:"mat-mdc-autocomplete-trigger","[attr.autocomplete]":"autocompleteAttribute","[attr.role]":'autocompleteDisabled ? null : "combobox"',"[attr.aria-autocomplete]":'autocompleteDisabled ? null : "list"',"[attr.aria-activedescendant]":"(panelOpen && activeOption) ? activeOption.id : null","[attr.aria-expanded]":"autocompleteDisabled ? null : panelOpen.toString()","[attr.aria-controls]":"(autocompleteDisabled || !panelOpen) ? null : autocomplete?.id","[attr.aria-haspopup]":'autocompleteDisabled ? null : "listbox"',"(focusin)":"_handleFocus()","(blur)":"_onTouched()","(input)":"_handleInput($event)","(keydown)":"_handleKeydown($event)","(click)":"_handleClick()"},exportAs:"matAutocompleteTrigger",providers:[MAT_AUTOCOMPLETE_VALUE_ACCESSOR]}]}],(()=>[]),{autocomplete:[{type:core.Input,args:["matAutocomplete"]}],position:[{type:core.Input,args:["matAutocompletePosition"]}],connectedTo:[{type:core.Input,args:["matAutocompleteConnectedTo"]}],autocompleteAttribute:[{type:core.Input,args:["autocomplete"]}],autocompleteDisabled:[{type:core.Input,args:[{alias:"matAutocompleteDisabled",transform:core.booleanAttribute}]}]});class MatAutocompleteModule{static ɵfac=function MatAutocompleteModule_Factory(__ngFactoryType__){return new(__ngFactoryType__||MatAutocompleteModule)};static ɵmod=core["ɵɵdefineNgModule"]({type:MatAutocompleteModule,imports:[overlay_module_BUj0D19H.m,index_DOxJc1m4.M,common_module_WayjW0Pb.M,MatAutocomplete,MatAutocompleteTrigger,MatAutocompleteOrigin],exports:[scrolling.Gj,MatAutocomplete,index_DOxJc1m4.M,common_module_WayjW0Pb.M,MatAutocompleteTrigger,MatAutocompleteOrigin]});static ɵinj=core["ɵɵdefineInjector"]({providers:[MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER],imports:[overlay_module_BUj0D19H.m,index_DOxJc1m4.M,common_module_WayjW0Pb.M,scrolling.Gj,index_DOxJc1m4.M,common_module_WayjW0Pb.M]})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](MatAutocompleteModule,[{type:core.NgModule,args:[{imports:[overlay_module_BUj0D19H.m,index_DOxJc1m4.M,common_module_WayjW0Pb.M,MatAutocomplete,MatAutocompleteTrigger,MatAutocompleteOrigin],exports:[scrolling.Gj,MatAutocomplete,index_DOxJc1m4.M,common_module_WayjW0Pb.M,MatAutocompleteTrigger,MatAutocompleteOrigin],providers:[MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER]}]}],null,null)},"./node_modules/rxjs/dist/esm5/internal/operators/mapTo.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{u:()=>mapTo});var _map__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/map.js");function mapTo(value){return(0,_map__WEBPACK_IMPORTED_MODULE_0__.T)((function(){return value}))}}}]);