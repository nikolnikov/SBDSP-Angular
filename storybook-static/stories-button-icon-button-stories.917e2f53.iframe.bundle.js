"use strict";(self.webpackChunksbdsp_angular=self.webpackChunksbdsp_angular||[]).push([[884],{"./src/stories/button/icon-button.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{DestructivePrimaryIconButton:()=>DestructivePrimaryIconButton,DisabledPrimaryIconButton:()=>DisabledPrimaryIconButton,IconButtonWithTooltip:()=>IconButtonWithTooltip,InverseIconButton:()=>InverseIconButton,PrimaryIconButton:()=>PrimaryIconButton,__namedExportsOrder:()=>__namedExportsOrder,default:()=>icon_button_stories});var dist=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),takeUntil=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/takeUntil.js"),coercion=__webpack_require__("./node_modules/@angular/cdk/fesm2022/coercion.mjs"),keycodes=__webpack_require__("./node_modules/@angular/cdk/fesm2022/keycodes.mjs"),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),common=__webpack_require__("./node_modules/@angular/common/fesm2022/common.mjs"),platform=__webpack_require__("./node_modules/@angular/cdk/fesm2022/platform.mjs"),a11y=__webpack_require__("./node_modules/@angular/cdk/fesm2022/a11y.mjs"),bidi=__webpack_require__("./node_modules/@angular/cdk/fesm2022/bidi.mjs"),fesm2022_overlay=__webpack_require__("./node_modules/@angular/cdk/fesm2022/overlay.mjs"),scrolling=__webpack_require__("./node_modules/@angular/cdk/fesm2022/scrolling.mjs"),portal=__webpack_require__("./node_modules/@angular/cdk/fesm2022/portal.mjs"),Subject=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/Subject.js"),animations=__webpack_require__("./node_modules/@angular/animations/fesm2022/animations.mjs"),fesm2022_core=__webpack_require__("./node_modules/@angular/material/fesm2022/core.mjs");const _c0=["tooltip"];function getMatTooltipInvalidPositionError(position){return Error(`Tooltip position "${position}" is invalid.`)}const MAT_TOOLTIP_SCROLL_STRATEGY=new core.InjectionToken("mat-tooltip-scroll-strategy",{providedIn:"root",factory:()=>{const overlay=(0,core.inject)(fesm2022_overlay.hJ);return()=>overlay.scrollStrategies.reposition({scrollThrottle:20})}});const MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER={provide:MAT_TOOLTIP_SCROLL_STRATEGY,deps:[fesm2022_overlay.hJ],useFactory:function MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY(overlay){return()=>overlay.scrollStrategies.reposition({scrollThrottle:20})}};const MAT_TOOLTIP_DEFAULT_OPTIONS=new core.InjectionToken("mat-tooltip-default-options",{providedIn:"root",factory:function MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY(){return{showDelay:0,hideDelay:0,touchendHideDelay:1500}}}),passiveListenerOptions=(0,platform.BQ)({passive:!0});class MatTooltip{get position(){return this._position}set position(value){value!==this._position&&(this._position=value,this._overlayRef&&(this._updatePosition(this._overlayRef),this._tooltipInstance?.show(0),this._overlayRef.updatePosition()))}get positionAtOrigin(){return this._positionAtOrigin}set positionAtOrigin(value){this._positionAtOrigin=(0,coercion.he)(value),this._detach(),this._overlayRef=null}get disabled(){return this._disabled}set disabled(value){const isDisabled=(0,coercion.he)(value);this._disabled!==isDisabled&&(this._disabled=isDisabled,isDisabled?this.hide(0):this._setupPointerEnterEventsIfNeeded(),this._syncAriaDescription(this.message))}get showDelay(){return this._showDelay}set showDelay(value){this._showDelay=(0,coercion.OE)(value)}get hideDelay(){return this._hideDelay}set hideDelay(value){this._hideDelay=(0,coercion.OE)(value),this._tooltipInstance&&(this._tooltipInstance._mouseLeaveHideDelay=this._hideDelay)}get message(){return this._message}set message(value){const oldMessage=this._message;this._message=null!=value?String(value).trim():"",!this._message&&this._isTooltipVisible()?this.hide(0):(this._setupPointerEnterEventsIfNeeded(),this._updateTooltipMessage()),this._syncAriaDescription(oldMessage)}get tooltipClass(){return this._tooltipClass}set tooltipClass(value){this._tooltipClass=value,this._tooltipInstance&&this._setTooltipClass(this._tooltipClass)}constructor(_overlay,_elementRef,_scrollDispatcher,_viewContainerRef,_ngZone,_platform,_ariaDescriber,_focusMonitor,scrollStrategy,_dir,_defaultOptions,_document){this._overlay=_overlay,this._elementRef=_elementRef,this._scrollDispatcher=_scrollDispatcher,this._viewContainerRef=_viewContainerRef,this._ngZone=_ngZone,this._platform=_platform,this._ariaDescriber=_ariaDescriber,this._focusMonitor=_focusMonitor,this._dir=_dir,this._defaultOptions=_defaultOptions,this._position="below",this._positionAtOrigin=!1,this._disabled=!1,this._viewInitialized=!1,this._pointerExitEventsInitialized=!1,this._tooltipComponent=TooltipComponent,this._viewportMargin=8,this._cssClassPrefix="mat-mdc",this.touchGestures="auto",this._message="",this._passiveListeners=[],this._touchstartTimeout=null,this._destroyed=new Subject.B,this._injector=(0,core.inject)(core.Injector),this._scrollStrategy=scrollStrategy,this._document=_document,_defaultOptions&&(this._showDelay=_defaultOptions.showDelay,this._hideDelay=_defaultOptions.hideDelay,_defaultOptions.position&&(this.position=_defaultOptions.position),_defaultOptions.positionAtOrigin&&(this.positionAtOrigin=_defaultOptions.positionAtOrigin),_defaultOptions.touchGestures&&(this.touchGestures=_defaultOptions.touchGestures),_defaultOptions.tooltipClass&&(this.tooltipClass=_defaultOptions.tooltipClass)),_dir.change.pipe((0,takeUntil.Q)(this._destroyed)).subscribe((()=>{this._overlayRef&&this._updatePosition(this._overlayRef)})),this._viewportMargin=8}ngAfterViewInit(){this._viewInitialized=!0,this._setupPointerEnterEventsIfNeeded(),this._focusMonitor.monitor(this._elementRef).pipe((0,takeUntil.Q)(this._destroyed)).subscribe((origin=>{origin?"keyboard"===origin&&this._ngZone.run((()=>this.show())):this._ngZone.run((()=>this.hide(0)))}))}ngOnDestroy(){const nativeElement=this._elementRef.nativeElement;this._touchstartTimeout&&clearTimeout(this._touchstartTimeout),this._overlayRef&&(this._overlayRef.dispose(),this._tooltipInstance=null),this._passiveListeners.forEach((([event,listener])=>{nativeElement.removeEventListener(event,listener,passiveListenerOptions)})),this._passiveListeners.length=0,this._destroyed.next(),this._destroyed.complete(),this._ariaDescriber.removeDescription(nativeElement,this.message,"tooltip"),this._focusMonitor.stopMonitoring(nativeElement)}show(delay=this.showDelay,origin){if(this.disabled||!this.message||this._isTooltipVisible())return void this._tooltipInstance?._cancelPendingAnimations();const overlayRef=this._createOverlay(origin);this._detach(),this._portal=this._portal||new portal.A8(this._tooltipComponent,this._viewContainerRef);const instance=this._tooltipInstance=overlayRef.attach(this._portal).instance;instance._triggerElement=this._elementRef.nativeElement,instance._mouseLeaveHideDelay=this._hideDelay,instance.afterHidden().pipe((0,takeUntil.Q)(this._destroyed)).subscribe((()=>this._detach())),this._setTooltipClass(this._tooltipClass),this._updateTooltipMessage(),instance.show(delay)}hide(delay=this.hideDelay){const instance=this._tooltipInstance;instance&&(instance.isVisible()?instance.hide(delay):(instance._cancelPendingAnimations(),this._detach()))}toggle(origin){this._isTooltipVisible()?this.hide():this.show(void 0,origin)}_isTooltipVisible(){return!!this._tooltipInstance&&this._tooltipInstance.isVisible()}_createOverlay(origin){if(this._overlayRef){const existingStrategy=this._overlayRef.getConfig().positionStrategy;if((!this.positionAtOrigin||!origin)&&existingStrategy._origin instanceof core.ElementRef)return this._overlayRef;this._detach()}const scrollableAncestors=this._scrollDispatcher.getAncestorScrollContainers(this._elementRef),strategy=this._overlay.position().flexibleConnectedTo(this.positionAtOrigin&&origin||this._elementRef).withTransformOriginOn(`.${this._cssClassPrefix}-tooltip`).withFlexibleDimensions(!1).withViewportMargin(this._viewportMargin).withScrollableContainers(scrollableAncestors);return strategy.positionChanges.pipe((0,takeUntil.Q)(this._destroyed)).subscribe((change=>{this._updateCurrentPositionClass(change.connectionPair),this._tooltipInstance&&change.scrollableViewProperties.isOverlayClipped&&this._tooltipInstance.isVisible()&&this._ngZone.run((()=>this.hide(0)))})),this._overlayRef=this._overlay.create({direction:this._dir,positionStrategy:strategy,panelClass:`${this._cssClassPrefix}-tooltip-panel`,scrollStrategy:this._scrollStrategy()}),this._updatePosition(this._overlayRef),this._overlayRef.detachments().pipe((0,takeUntil.Q)(this._destroyed)).subscribe((()=>this._detach())),this._overlayRef.outsidePointerEvents().pipe((0,takeUntil.Q)(this._destroyed)).subscribe((()=>this._tooltipInstance?._handleBodyInteraction())),this._overlayRef.keydownEvents().pipe((0,takeUntil.Q)(this._destroyed)).subscribe((event=>{this._isTooltipVisible()&&event.keyCode===keycodes._f&&!(0,keycodes.rp)(event)&&(event.preventDefault(),event.stopPropagation(),this._ngZone.run((()=>this.hide(0))))})),this._defaultOptions?.disableTooltipInteractivity&&this._overlayRef.addPanelClass(`${this._cssClassPrefix}-tooltip-panel-non-interactive`),this._overlayRef}_detach(){this._overlayRef&&this._overlayRef.hasAttached()&&this._overlayRef.detach(),this._tooltipInstance=null}_updatePosition(overlayRef){const position=overlayRef.getConfig().positionStrategy,origin=this._getOrigin(),overlay=this._getOverlayPosition();position.withPositions([this._addOffset({...origin.main,...overlay.main}),this._addOffset({...origin.fallback,...overlay.fallback})])}_addOffset(position){const isLtr=!this._dir||"ltr"==this._dir.value;return"top"===position.originY?position.offsetY=-8:"bottom"===position.originY?position.offsetY=8:"start"===position.originX?position.offsetX=isLtr?-8:8:"end"===position.originX&&(position.offsetX=isLtr?8:-8),position}_getOrigin(){const isLtr=!this._dir||"ltr"==this._dir.value,position=this.position;let originPosition;if("above"==position||"below"==position)originPosition={originX:"center",originY:"above"==position?"top":"bottom"};else if("before"==position||"left"==position&&isLtr||"right"==position&&!isLtr)originPosition={originX:"start",originY:"center"};else if("after"==position||"right"==position&&isLtr||"left"==position&&!isLtr)originPosition={originX:"end",originY:"center"};else if("undefined"==typeof ngDevMode||ngDevMode)throw getMatTooltipInvalidPositionError(position);const{x,y}=this._invertPosition(originPosition.originX,originPosition.originY);return{main:originPosition,fallback:{originX:x,originY:y}}}_getOverlayPosition(){const isLtr=!this._dir||"ltr"==this._dir.value,position=this.position;let overlayPosition;if("above"==position)overlayPosition={overlayX:"center",overlayY:"bottom"};else if("below"==position)overlayPosition={overlayX:"center",overlayY:"top"};else if("before"==position||"left"==position&&isLtr||"right"==position&&!isLtr)overlayPosition={overlayX:"end",overlayY:"center"};else if("after"==position||"right"==position&&isLtr||"left"==position&&!isLtr)overlayPosition={overlayX:"start",overlayY:"center"};else if("undefined"==typeof ngDevMode||ngDevMode)throw getMatTooltipInvalidPositionError(position);const{x,y}=this._invertPosition(overlayPosition.overlayX,overlayPosition.overlayY);return{main:overlayPosition,fallback:{overlayX:x,overlayY:y}}}_updateTooltipMessage(){this._tooltipInstance&&(this._tooltipInstance.message=this.message,this._tooltipInstance._markForCheck(),(0,core.afterNextRender)((()=>{this._tooltipInstance&&this._overlayRef.updatePosition()}),{injector:this._injector}))}_setTooltipClass(tooltipClass){this._tooltipInstance&&(this._tooltipInstance.tooltipClass=tooltipClass,this._tooltipInstance._markForCheck())}_invertPosition(x,y){return"above"===this.position||"below"===this.position?"top"===y?y="bottom":"bottom"===y&&(y="top"):"end"===x?x="start":"start"===x&&(x="end"),{x,y}}_updateCurrentPositionClass(connectionPair){const{overlayY,originX,originY}=connectionPair;let newPosition;if(newPosition="center"===overlayY?this._dir&&"rtl"===this._dir.value?"end"===originX?"left":"right":"start"===originX?"left":"right":"bottom"===overlayY&&"top"===originY?"above":"below",newPosition!==this._currentPosition){const overlayRef=this._overlayRef;if(overlayRef){const classPrefix=`${this._cssClassPrefix}-tooltip-panel-`;overlayRef.removePanelClass(classPrefix+this._currentPosition),overlayRef.addPanelClass(classPrefix+newPosition)}this._currentPosition=newPosition}}_setupPointerEnterEventsIfNeeded(){!this._disabled&&this.message&&this._viewInitialized&&!this._passiveListeners.length&&(this._platformSupportsMouseEvents()?this._passiveListeners.push(["mouseenter",event=>{let point;this._setupPointerExitEventsIfNeeded(),void 0!==event.x&&void 0!==event.y&&(point=event),this.show(void 0,point)}]):"off"!==this.touchGestures&&(this._disableNativeGesturesIfNecessary(),this._passiveListeners.push(["touchstart",event=>{const touch=event.targetTouches?.[0],origin=touch?{x:touch.clientX,y:touch.clientY}:void 0;this._setupPointerExitEventsIfNeeded(),this._touchstartTimeout&&clearTimeout(this._touchstartTimeout);this._touchstartTimeout=setTimeout((()=>{this._touchstartTimeout=null,this.show(void 0,origin)}),this._defaultOptions.touchLongPressShowDelay??500)}])),this._addListeners(this._passiveListeners))}_setupPointerExitEventsIfNeeded(){if(this._pointerExitEventsInitialized)return;this._pointerExitEventsInitialized=!0;const exitListeners=[];if(this._platformSupportsMouseEvents())exitListeners.push(["mouseleave",event=>{const newTarget=event.relatedTarget;newTarget&&this._overlayRef?.overlayElement.contains(newTarget)||this.hide()}],["wheel",event=>this._wheelListener(event)]);else if("off"!==this.touchGestures){this._disableNativeGesturesIfNecessary();const touchendListener=()=>{this._touchstartTimeout&&clearTimeout(this._touchstartTimeout),this.hide(this._defaultOptions.touchendHideDelay)};exitListeners.push(["touchend",touchendListener],["touchcancel",touchendListener])}this._addListeners(exitListeners),this._passiveListeners.push(...exitListeners)}_addListeners(listeners){listeners.forEach((([event,listener])=>{this._elementRef.nativeElement.addEventListener(event,listener,passiveListenerOptions)}))}_platformSupportsMouseEvents(){return!this._platform.IOS&&!this._platform.ANDROID}_wheelListener(event){if(this._isTooltipVisible()){const elementUnderPointer=this._document.elementFromPoint(event.clientX,event.clientY),element=this._elementRef.nativeElement;elementUnderPointer===element||element.contains(elementUnderPointer)||this.hide()}}_disableNativeGesturesIfNecessary(){const gestures=this.touchGestures;if("off"!==gestures){const element=this._elementRef.nativeElement,style=element.style;("on"===gestures||"INPUT"!==element.nodeName&&"TEXTAREA"!==element.nodeName)&&(style.userSelect=style.msUserSelect=style.webkitUserSelect=style.MozUserSelect="none"),"on"!==gestures&&element.draggable||(style.webkitUserDrag="none"),style.touchAction="none",style.webkitTapHighlightColor="transparent"}}_syncAriaDescription(oldMessage){this._ariaDescriptionPending||(this._ariaDescriptionPending=!0,this._ariaDescriber.removeDescription(this._elementRef.nativeElement,oldMessage,"tooltip"),this._ngZone.runOutsideAngular((()=>{Promise.resolve().then((()=>{this._ariaDescriptionPending=!1,this.message&&!this.disabled&&this._ariaDescriber.describe(this._elementRef.nativeElement,this.message,"tooltip")}))})))}static{this.ɵfac=function MatTooltip_Factory(__ngFactoryType__){return new(__ngFactoryType__||MatTooltip)(core["ɵɵdirectiveInject"](fesm2022_overlay.hJ),core["ɵɵdirectiveInject"](core.ElementRef),core["ɵɵdirectiveInject"](scrolling.R),core["ɵɵdirectiveInject"](core.ViewContainerRef),core["ɵɵdirectiveInject"](core.NgZone),core["ɵɵdirectiveInject"](platform.OD),core["ɵɵdirectiveInject"](a11y.vr),core["ɵɵdirectiveInject"](a11y.FN),core["ɵɵdirectiveInject"](MAT_TOOLTIP_SCROLL_STRATEGY),core["ɵɵdirectiveInject"](bidi.dS),core["ɵɵdirectiveInject"](MAT_TOOLTIP_DEFAULT_OPTIONS,8),core["ɵɵdirectiveInject"](common.DOCUMENT))}}static{this.ɵdir=core["ɵɵdefineDirective"]({type:MatTooltip,selectors:[["","matTooltip",""]],hostAttrs:[1,"mat-mdc-tooltip-trigger"],hostVars:2,hostBindings:function MatTooltip_HostBindings(rf,ctx){2&rf&&core["ɵɵclassProp"]("mat-mdc-tooltip-disabled",ctx.disabled)},inputs:{position:[0,"matTooltipPosition","position"],positionAtOrigin:[0,"matTooltipPositionAtOrigin","positionAtOrigin"],disabled:[0,"matTooltipDisabled","disabled"],showDelay:[0,"matTooltipShowDelay","showDelay"],hideDelay:[0,"matTooltipHideDelay","hideDelay"],touchGestures:[0,"matTooltipTouchGestures","touchGestures"],message:[0,"matTooltip","message"],tooltipClass:[0,"matTooltipClass","tooltipClass"]},exportAs:["matTooltip"],standalone:!0})}}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](MatTooltip,[{type:core.Directive,args:[{selector:"[matTooltip]",exportAs:"matTooltip",host:{class:"mat-mdc-tooltip-trigger","[class.mat-mdc-tooltip-disabled]":"disabled"},standalone:!0}]}],(()=>[{type:fesm2022_overlay.hJ},{type:core.ElementRef},{type:scrolling.R},{type:core.ViewContainerRef},{type:core.NgZone},{type:platform.OD},{type:a11y.vr},{type:a11y.FN},{type:void 0,decorators:[{type:core.Inject,args:[MAT_TOOLTIP_SCROLL_STRATEGY]}]},{type:bidi.dS},{type:void 0,decorators:[{type:core.Optional},{type:core.Inject,args:[MAT_TOOLTIP_DEFAULT_OPTIONS]}]},{type:void 0,decorators:[{type:core.Inject,args:[common.DOCUMENT]}]}]),{position:[{type:core.Input,args:["matTooltipPosition"]}],positionAtOrigin:[{type:core.Input,args:["matTooltipPositionAtOrigin"]}],disabled:[{type:core.Input,args:["matTooltipDisabled"]}],showDelay:[{type:core.Input,args:["matTooltipShowDelay"]}],hideDelay:[{type:core.Input,args:["matTooltipHideDelay"]}],touchGestures:[{type:core.Input,args:["matTooltipTouchGestures"]}],message:[{type:core.Input,args:["matTooltip"]}],tooltipClass:[{type:core.Input,args:["matTooltipClass"]}]});class TooltipComponent{constructor(_changeDetectorRef,_elementRef,animationMode){this._changeDetectorRef=_changeDetectorRef,this._elementRef=_elementRef,this._isMultiline=!1,this._closeOnInteraction=!1,this._isVisible=!1,this._onHide=new Subject.B,this._showAnimation="mat-mdc-tooltip-show",this._hideAnimation="mat-mdc-tooltip-hide",this._animationsDisabled="NoopAnimations"===animationMode}show(delay){null!=this._hideTimeoutId&&clearTimeout(this._hideTimeoutId),this._showTimeoutId=setTimeout((()=>{this._toggleVisibility(!0),this._showTimeoutId=void 0}),delay)}hide(delay){null!=this._showTimeoutId&&clearTimeout(this._showTimeoutId),this._hideTimeoutId=setTimeout((()=>{this._toggleVisibility(!1),this._hideTimeoutId=void 0}),delay)}afterHidden(){return this._onHide}isVisible(){return this._isVisible}ngOnDestroy(){this._cancelPendingAnimations(),this._onHide.complete(),this._triggerElement=null}_handleBodyInteraction(){this._closeOnInteraction&&this.hide(0)}_markForCheck(){this._changeDetectorRef.markForCheck()}_handleMouseLeave({relatedTarget}){relatedTarget&&this._triggerElement.contains(relatedTarget)||(this.isVisible()?this.hide(this._mouseLeaveHideDelay):this._finalizeAnimation(!1))}_onShow(){this._isMultiline=this._isTooltipMultiline(),this._markForCheck()}_isTooltipMultiline(){const rect=this._elementRef.nativeElement.getBoundingClientRect();return rect.height>24&&rect.width>=200}_handleAnimationEnd({animationName}){animationName!==this._showAnimation&&animationName!==this._hideAnimation||this._finalizeAnimation(animationName===this._showAnimation)}_cancelPendingAnimations(){null!=this._showTimeoutId&&clearTimeout(this._showTimeoutId),null!=this._hideTimeoutId&&clearTimeout(this._hideTimeoutId),this._showTimeoutId=this._hideTimeoutId=void 0}_finalizeAnimation(toVisible){toVisible?this._closeOnInteraction=!0:this.isVisible()||this._onHide.next()}_toggleVisibility(isVisible){const tooltip=this._tooltip.nativeElement,showClass=this._showAnimation,hideClass=this._hideAnimation;if(tooltip.classList.remove(isVisible?hideClass:showClass),tooltip.classList.add(isVisible?showClass:hideClass),this._isVisible!==isVisible&&(this._isVisible=isVisible,this._changeDetectorRef.markForCheck()),isVisible&&!this._animationsDisabled&&"function"==typeof getComputedStyle){const styles=getComputedStyle(tooltip);"0s"!==styles.getPropertyValue("animation-duration")&&"none"!==styles.getPropertyValue("animation-name")||(this._animationsDisabled=!0)}isVisible&&this._onShow(),this._animationsDisabled&&(tooltip.classList.add("_mat-animation-noopable"),this._finalizeAnimation(isVisible))}static{this.ɵfac=function TooltipComponent_Factory(__ngFactoryType__){return new(__ngFactoryType__||TooltipComponent)(core["ɵɵdirectiveInject"](core.ChangeDetectorRef),core["ɵɵdirectiveInject"](core.ElementRef),core["ɵɵdirectiveInject"](core.ANIMATION_MODULE_TYPE,8))}}static{this.ɵcmp=core["ɵɵdefineComponent"]({type:TooltipComponent,selectors:[["mat-tooltip-component"]],viewQuery:function TooltipComponent_Query(rf,ctx){if(1&rf&&core["ɵɵviewQuery"](_c0,7),2&rf){let _t;core["ɵɵqueryRefresh"](_t=core["ɵɵloadQuery"]())&&(ctx._tooltip=_t.first)}},hostAttrs:["aria-hidden","true"],hostBindings:function TooltipComponent_HostBindings(rf,ctx){1&rf&&core["ɵɵlistener"]("mouseleave",(function TooltipComponent_mouseleave_HostBindingHandler($event){return ctx._handleMouseLeave($event)}))},standalone:!0,features:[core["ɵɵStandaloneFeature"]],decls:4,vars:4,consts:[["tooltip",""],[1,"mdc-tooltip","mat-mdc-tooltip",3,"animationend","ngClass"],[1,"mat-mdc-tooltip-surface","mdc-tooltip__surface"]],template:function TooltipComponent_Template(rf,ctx){if(1&rf){const _r1=core["ɵɵgetCurrentView"]();core["ɵɵelementStart"](0,"div",1,0),core["ɵɵlistener"]("animationend",(function TooltipComponent_Template_div_animationend_0_listener($event){return core["ɵɵrestoreView"](_r1),core["ɵɵresetView"](ctx._handleAnimationEnd($event))})),core["ɵɵelementStart"](2,"div",2),core["ɵɵtext"](3),core["ɵɵelementEnd"]()()}2&rf&&(core["ɵɵclassProp"]("mdc-tooltip--multiline",ctx._isMultiline),core["ɵɵproperty"]("ngClass",ctx.tooltipClass),core["ɵɵadvance"](3),core["ɵɵtextInterpolate"](ctx.message))},dependencies:[common.NgClass],styles:['.mat-mdc-tooltip{position:relative;transform:scale(0);display:inline-flex}.mat-mdc-tooltip::before{content:"";top:0;right:0;bottom:0;left:0;z-index:-1;position:absolute}.mat-mdc-tooltip-panel-below .mat-mdc-tooltip::before{top:-8px}.mat-mdc-tooltip-panel-above .mat-mdc-tooltip::before{bottom:-8px}.mat-mdc-tooltip-panel-right .mat-mdc-tooltip::before{left:-8px}.mat-mdc-tooltip-panel-left .mat-mdc-tooltip::before{right:-8px}.mat-mdc-tooltip._mat-animation-noopable{animation:none;transform:scale(1)}.mat-mdc-tooltip-surface{word-break:normal;overflow-wrap:anywhere;padding:4px 8px;min-width:40px;max-width:200px;min-height:24px;max-height:40vh;box-sizing:border-box;overflow:hidden;text-align:center;will-change:transform,opacity;background-color:var(--mdc-plain-tooltip-container-color, var(--mat-app-inverse-surface));color:var(--mdc-plain-tooltip-supporting-text-color, var(--mat-app-inverse-on-surface));border-radius:var(--mdc-plain-tooltip-container-shape, var(--mat-app-corner-extra-small));font-family:var(--mdc-plain-tooltip-supporting-text-font, var(--mat-app-body-small-font));font-size:var(--mdc-plain-tooltip-supporting-text-size, var(--mat-app-body-small-size));font-weight:var(--mdc-plain-tooltip-supporting-text-weight, var(--mat-app-body-small-weight));line-height:var(--mdc-plain-tooltip-supporting-text-line-height, var(--mat-app-body-small-line-height));letter-spacing:var(--mdc-plain-tooltip-supporting-text-tracking, var(--mat-app-body-small-tracking))}.mat-mdc-tooltip-surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:"";pointer-events:none}.mdc-tooltip--multiline .mat-mdc-tooltip-surface{text-align:left}[dir=rtl] .mdc-tooltip--multiline .mat-mdc-tooltip-surface{text-align:right}.mat-mdc-tooltip-panel.mat-mdc-tooltip-panel-non-interactive{pointer-events:none}@keyframes mat-mdc-tooltip-show{0%{opacity:0;transform:scale(0.8)}100%{opacity:1;transform:scale(1)}}@keyframes mat-mdc-tooltip-hide{0%{opacity:1;transform:scale(1)}100%{opacity:0;transform:scale(0.8)}}.mat-mdc-tooltip-show{animation:mat-mdc-tooltip-show 150ms cubic-bezier(0, 0, 0.2, 1) forwards}.mat-mdc-tooltip-hide{animation:mat-mdc-tooltip-hide 75ms cubic-bezier(0.4, 0, 1, 1) forwards}'],encapsulation:2,changeDetection:0})}}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](TooltipComponent,[{type:core.Component,args:[{selector:"mat-tooltip-component",encapsulation:core.ViewEncapsulation.None,changeDetection:core.ChangeDetectionStrategy.OnPush,host:{"(mouseleave)":"_handleMouseLeave($event)","aria-hidden":"true"},standalone:!0,imports:[common.NgClass],template:'<div\n  #tooltip\n  class="mdc-tooltip mat-mdc-tooltip"\n  [ngClass]="tooltipClass"\n  (animationend)="_handleAnimationEnd($event)"\n  [class.mdc-tooltip--multiline]="_isMultiline">\n  <div class="mat-mdc-tooltip-surface mdc-tooltip__surface">{{message}}</div>\n</div>\n',styles:['.mat-mdc-tooltip{position:relative;transform:scale(0);display:inline-flex}.mat-mdc-tooltip::before{content:"";top:0;right:0;bottom:0;left:0;z-index:-1;position:absolute}.mat-mdc-tooltip-panel-below .mat-mdc-tooltip::before{top:-8px}.mat-mdc-tooltip-panel-above .mat-mdc-tooltip::before{bottom:-8px}.mat-mdc-tooltip-panel-right .mat-mdc-tooltip::before{left:-8px}.mat-mdc-tooltip-panel-left .mat-mdc-tooltip::before{right:-8px}.mat-mdc-tooltip._mat-animation-noopable{animation:none;transform:scale(1)}.mat-mdc-tooltip-surface{word-break:normal;overflow-wrap:anywhere;padding:4px 8px;min-width:40px;max-width:200px;min-height:24px;max-height:40vh;box-sizing:border-box;overflow:hidden;text-align:center;will-change:transform,opacity;background-color:var(--mdc-plain-tooltip-container-color, var(--mat-app-inverse-surface));color:var(--mdc-plain-tooltip-supporting-text-color, var(--mat-app-inverse-on-surface));border-radius:var(--mdc-plain-tooltip-container-shape, var(--mat-app-corner-extra-small));font-family:var(--mdc-plain-tooltip-supporting-text-font, var(--mat-app-body-small-font));font-size:var(--mdc-plain-tooltip-supporting-text-size, var(--mat-app-body-small-size));font-weight:var(--mdc-plain-tooltip-supporting-text-weight, var(--mat-app-body-small-weight));line-height:var(--mdc-plain-tooltip-supporting-text-line-height, var(--mat-app-body-small-line-height));letter-spacing:var(--mdc-plain-tooltip-supporting-text-tracking, var(--mat-app-body-small-tracking))}.mat-mdc-tooltip-surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:"";pointer-events:none}.mdc-tooltip--multiline .mat-mdc-tooltip-surface{text-align:left}[dir=rtl] .mdc-tooltip--multiline .mat-mdc-tooltip-surface{text-align:right}.mat-mdc-tooltip-panel.mat-mdc-tooltip-panel-non-interactive{pointer-events:none}@keyframes mat-mdc-tooltip-show{0%{opacity:0;transform:scale(0.8)}100%{opacity:1;transform:scale(1)}}@keyframes mat-mdc-tooltip-hide{0%{opacity:1;transform:scale(1)}100%{opacity:0;transform:scale(0.8)}}.mat-mdc-tooltip-show{animation:mat-mdc-tooltip-show 150ms cubic-bezier(0, 0, 0.2, 1) forwards}.mat-mdc-tooltip-hide{animation:mat-mdc-tooltip-hide 75ms cubic-bezier(0.4, 0, 1, 1) forwards}']}]}],(()=>[{type:core.ChangeDetectorRef},{type:core.ElementRef},{type:void 0,decorators:[{type:core.Optional},{type:core.Inject,args:[core.ANIMATION_MODULE_TYPE]}]}]),{_tooltip:[{type:core.ViewChild,args:["tooltip",{static:!0}]}]});(0,animations.hZ)("state",[(0,animations.wk)("initial, void, hidden",(0,animations.iF)({opacity:0,transform:"scale(0.8)"})),(0,animations.wk)("visible",(0,animations.iF)({transform:"scale(1)"})),(0,animations.kY)("* => visible",(0,animations.i0)("150ms cubic-bezier(0, 0, 0.2, 1)")),(0,animations.kY)("* => hidden",(0,animations.i0)("75ms cubic-bezier(0.4, 0, 1, 1)"))]);class MatTooltipModule{static{this.ɵfac=function MatTooltipModule_Factory(__ngFactoryType__){return new(__ngFactoryType__||MatTooltipModule)}}static{this.ɵmod=core["ɵɵdefineNgModule"]({type:MatTooltipModule,imports:[a11y.Pd,common.CommonModule,fesm2022_overlay.z_,fesm2022_core.yE,MatTooltip,TooltipComponent],exports:[MatTooltip,TooltipComponent,fesm2022_core.yE,scrolling.Gj]})}static{this.ɵinj=core["ɵɵdefineInjector"]({providers:[MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER],imports:[a11y.Pd,common.CommonModule,fesm2022_overlay.z_,fesm2022_core.yE,fesm2022_core.yE,scrolling.Gj]})}}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](MatTooltipModule,[{type:core.NgModule,args:[{imports:[a11y.Pd,common.CommonModule,fesm2022_overlay.z_,fesm2022_core.yE,MatTooltip,TooltipComponent],exports:[MatTooltip,TooltipComponent,fesm2022_core.yE,scrolling.Gj],providers:[MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER]}]}],null,null);var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs");let QDSIconButtonComponent=class QDSIconButtonComponent{constructor(){this.customClasses="",this.icon="",this.isDestructive=!1,this.isDisabled=!1,this.isInverse=!1,this.size="lg",this.tooltip="",this.tooltipPlacement="above",this.clickHandler=new core.EventEmitter}onClick(event){this.clickHandler.emit(event)}getButtonClasses(){return{"ds-button":!0,"--icon":!0,[this.customClasses]:!!this.customClasses,[`--${this.size}`]:!!this.size,"--destructive":this.isDestructive,"--disabled":this.isDisabled,"--inverse":this.isInverse}}static{this.propDecorators={customClasses:[{type:core.Input}],icon:[{type:core.Input}],isDestructive:[{type:core.Input}],isDisabled:[{type:core.Input}],isInverse:[{type:core.Input}],size:[{type:core.Input}],tooltip:[{type:core.Input}],tooltipPlacement:[{type:core.Input}],clickHandler:[{type:core.Output}]}}};QDSIconButtonComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"qds-icon-button",template:'\n        <ng-container *ngIf="tooltip; else noTooltip">\n            <span\n                matTooltip="{{ tooltip }}"\n                matTooltipPosition="{{ tooltipPlacement }}"\n            >\n                <button\n                    [ngClass]="getButtonClasses()"\n                    [attr.aria-label]="icon"\n                    (click)="onClick($event)"\n                    [disabled]="isDisabled"\n                >\n                    <span class="ds-icon--{{ icon }}"></span>\n                </button>\n            </span>\n        </ng-container>\n        <ng-template #noTooltip>\n            <button\n                [ngClass]="getButtonClasses()"\n                [attr.aria-label]="icon"\n                (click)="onClick($event)"\n                [disabled]="isDisabled"\n            >\n                <span class="ds-icon--{{ icon }}"></span>\n            </button>\n        </ng-template>\n    '})],QDSIconButtonComponent);const icon_button_stories={title:"Components/Button/Icon",component:QDSIconButtonComponent,decorators:[(0,dist.moduleMetadata)({imports:[MatTooltipModule]})],parameters:{layout:"centered",actions:{disable:!0},interactions:{disable:!0}},tags:["autodocs","!dev"],argTypes:{icon:{control:"text",table:{type:{summary:"string"}}},size:{control:"radio",options:["sm","md","lg"],table:{type:{summary:"'sm' | 'md' | 'lg'"},defaultValue:{summary:"lg"}}},isDestructive:{control:"boolean",table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}},isDisabled:{control:"boolean",table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}},isInverse:{control:"boolean",table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}},tooltip:{control:"text",table:{type:{summary:"string"}}},tooltipPlacement:{control:"radio",options:["above","below","left","right"],table:{type:{summary:"'above' | 'below' | 'left' | 'right'"},defaultValue:{summary:"above"}}}}},PrimaryIconButton={args:{icon:"gear",size:"lg"}},DisabledPrimaryIconButton={args:{...PrimaryIconButton.args,isDisabled:!0}},DestructivePrimaryIconButton={args:{...PrimaryIconButton.args,isDestructive:!0}},InverseIconButton={args:{...PrimaryIconButton.args,isInverse:!0}},IconButtonWithTooltip={args:{...PrimaryIconButton.args,tooltip:"Settings"}},__namedExportsOrder=["PrimaryIconButton","DisabledPrimaryIconButton","DestructivePrimaryIconButton","InverseIconButton","IconButtonWithTooltip"];PrimaryIconButton.parameters={...PrimaryIconButton.parameters,docs:{...PrimaryIconButton.parameters?.docs,source:{originalSource:"{\n  args: {\n    icon: 'gear',\n    size: 'lg'\n  }\n}",...PrimaryIconButton.parameters?.docs?.source}}},DisabledPrimaryIconButton.parameters={...DisabledPrimaryIconButton.parameters,docs:{...DisabledPrimaryIconButton.parameters?.docs,source:{originalSource:"{\n  args: {\n    ...PrimaryIconButton.args,\n    isDisabled: true\n  }\n}",...DisabledPrimaryIconButton.parameters?.docs?.source}}},DestructivePrimaryIconButton.parameters={...DestructivePrimaryIconButton.parameters,docs:{...DestructivePrimaryIconButton.parameters?.docs,source:{originalSource:"{\n  args: {\n    ...PrimaryIconButton.args,\n    isDestructive: true\n  }\n}",...DestructivePrimaryIconButton.parameters?.docs?.source}}},InverseIconButton.parameters={...InverseIconButton.parameters,docs:{...InverseIconButton.parameters?.docs,source:{originalSource:"{\n  args: {\n    ...PrimaryIconButton.args,\n    isInverse: true\n  }\n}",...InverseIconButton.parameters?.docs?.source}}},IconButtonWithTooltip.parameters={...IconButtonWithTooltip.parameters,docs:{...IconButtonWithTooltip.parameters?.docs,source:{originalSource:"{\n  args: {\n    ...PrimaryIconButton.args,\n    tooltip: 'Settings'\n  }\n}",...IconButtonWithTooltip.parameters?.docs?.source}}}}}]);