"use strict";(self.webpackChunksbdsp_angular=self.webpackChunksbdsp_angular||[]).push([[4228],{"./src/stories/toggle/toggle.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{BasicToggle:()=>BasicToggle,CheckedToggle:()=>CheckedToggle,DisabledToggle:()=>DisabledToggle,__namedExportsOrder:()=>__namedExportsOrder,default:()=>toggle_stories});var dist=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs");let QDSToggleComponent=class QDSToggleComponent{constructor(el,renderer){this.el=el,this.renderer=renderer,this.customClasses="",this.inputId="",this.isChecked=!1,this.isDisabled=!1,this.label="",this.labelPosition="after"}ngAfterViewInit(){this.el.nativeElement.getAttributeNames().forEach((attr=>this.renderer.removeAttribute(this.el.nativeElement,attr)))}static{this.ctorParameters=()=>[{type:core.ElementRef},{type:core.Renderer2}]}static{this.propDecorators={customClasses:[{type:core.Input}],inputId:[{type:core.Input}],isChecked:[{type:core.Input}],isDisabled:[{type:core.Input}],label:[{type:core.Input}],labelPosition:[{type:core.Input}]}}};QDSToggleComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"qds-toggle",template:'\n        <mat-slide-toggle\n            class="ds-toggle-switch"\n            [class]="customClasses"\n            [class.--disabled]="isDisabled"\n            [id]="inputId"\n            [labelPosition]="labelPosition"\n            [attr.aria-label]="label"\n            [checked]="isChecked"\n        >\n            {{ label }}\n        </mat-slide-toggle>\n    '})],QDSToggleComponent);var material_module=__webpack_require__("./src/app/material.module.ts");const toggle_stories={title:"Components/Toggle",component:QDSToggleComponent,decorators:[(0,dist.moduleMetadata)({imports:[material_module.G]})],parameters:{layout:"centered",actions:{disable:!0},interactions:{disable:!0}},tags:["autodocs","!dev"],argTypes:{isChecked:{control:{type:"boolean"},table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}},isDisabled:{control:{type:"boolean"},table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}},label:{control:{type:"text"},table:{type:{summary:"string"}}},labelPosition:{control:"radio",options:["before","after"],table:{type:{summary:"'before' | 'after'"},defaultValue:{summary:"after"}}}}},BasicToggle={args:{inputId:"toggle-1",label:"Label",labelPosition:"after"},argTypes:{inputId:{table:{disable:!0}}}},DisabledToggle={args:{...BasicToggle.args,inputId:"toggle-2",isDisabled:!0},...BasicToggle.argTypes},CheckedToggle={args:{...BasicToggle.args,inputId:"toggle-3",isChecked:!0},...BasicToggle.argTypes},__namedExportsOrder=["BasicToggle","DisabledToggle","CheckedToggle"];BasicToggle.parameters={...BasicToggle.parameters,docs:{...BasicToggle.parameters?.docs,source:{originalSource:"{\n  args: {\n    inputId: 'toggle-1',\n    label: 'Label',\n    labelPosition: 'after'\n  },\n  argTypes: {\n    inputId: {\n      table: {\n        disable: true\n      }\n    }\n  }\n}",...BasicToggle.parameters?.docs?.source}}},DisabledToggle.parameters={...DisabledToggle.parameters,docs:{...DisabledToggle.parameters?.docs,source:{originalSource:"{\n  args: {\n    ...BasicToggle.args,\n    inputId: 'toggle-2',\n    isDisabled: true\n  },\n  ...BasicToggle.argTypes\n}",...DisabledToggle.parameters?.docs?.source}}},CheckedToggle.parameters={...CheckedToggle.parameters,docs:{...CheckedToggle.parameters?.docs,source:{originalSource:"{\n  args: {\n    ...BasicToggle.args,\n    inputId: 'toggle-3',\n    isChecked: true\n  },\n  ...BasicToggle.argTypes\n}",...CheckedToggle.parameters?.docs?.source}}}}}]);