(self.webpackChunksbdsp_angular=self.webpackChunksbdsp_angular||[]).push([[2756],{"./node_modules/@angular/cdk/fesm2022/layout.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Rp:()=>Breakpoints});var _angular_core__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs");class LayoutModule{static ɵfac=function LayoutModule_Factory(__ngFactoryType__){return new(__ngFactoryType__||LayoutModule)};static ɵmod=_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({type:LayoutModule});static ɵinj=_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({})}("undefined"==typeof ngDevMode||ngDevMode)&&_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](LayoutModule,[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.NgModule,args:[{}]}],null,null);const Breakpoints={XSmall:"(max-width: 599.98px)",Small:"(min-width: 600px) and (max-width: 959.98px)",Medium:"(min-width: 960px) and (max-width: 1279.98px)",Large:"(min-width: 1280px) and (max-width: 1919.98px)",XLarge:"(min-width: 1920px)",Handset:"(max-width: 599.98px) and (orientation: portrait), (max-width: 959.98px) and (orientation: landscape)",Tablet:"(min-width: 600px) and (max-width: 839.98px) and (orientation: portrait), (min-width: 960px) and (max-width: 1279.98px) and (orientation: landscape)",Web:"(min-width: 840px) and (orientation: portrait), (min-width: 1280px) and (orientation: landscape)",HandsetPortrait:"(max-width: 599.98px) and (orientation: portrait)",TabletPortrait:"(min-width: 600px) and (max-width: 839.98px) and (orientation: portrait)",WebPortrait:"(min-width: 840px) and (orientation: portrait)",HandsetLandscape:"(max-width: 959.98px) and (orientation: landscape)",TabletLandscape:"(min-width: 960px) and (max-width: 1279.98px) and (orientation: landscape)",WebLandscape:"(min-width: 1280px) and (orientation: landscape)"}},"./node_modules/css-loader/dist/runtime/noSourceMaps.js":module=>{"use strict";module.exports=function(i){return i[1]}},"./src/stories/autocomplete/autocomplete.component.ts.scss?ngResource!=!./node_modules/@ngtools/webpack/src/loaders/inline-resource.js?data=Omhvc3QgeyBkaXNwbGF5OiBibG9jazsgfQ%3D%3D!./src/stories/autocomplete/autocomplete.component.ts":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,":host {\n  display: block;\n}",""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./src/stories/autocomplete/autocomplete.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AutocompleteWithIcon:()=>AutocompleteWithIcon,BasicAutocomplete:()=>BasicAutocomplete,__namedExportsOrder:()=>__namedExportsOrder,default:()=>autocomplete_stories});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),autocomplete_component=__webpack_require__("./src/stories/autocomplete/autocomplete.component.ts.scss?ngResource!=!./node_modules/@ngtools/webpack/src/loaders/inline-resource.js?data=Omhvc3QgeyBkaXNwbGF5OiBibG9jazsgfQ%3D%3D!./src/stories/autocomplete/autocomplete.component.ts"),autocomplete_component_default=__webpack_require__.n(autocomplete_component),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),common_module_Dx7dWex5=__webpack_require__("./node_modules/@angular/common/fesm2022/common_module-Dx7dWex5.mjs"),startWith=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/startWith.js"),map=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/map.js"),fesm2022_forms=__webpack_require__("./node_modules/@angular/forms/fesm2022/forms.mjs"),module_DAp_YJSv=__webpack_require__("./node_modules/@angular/material/fesm2022/module-DAp_YJSv.mjs"),input=__webpack_require__("./node_modules/@angular/material/fesm2022/input.mjs"),autocomplete=__webpack_require__("./node_modules/@angular/material/fesm2022/autocomplete.mjs");let QDSAutocompleteComponent=class QDSAutocompleteComponent{trackByOption(index,option){return option}onSelectionChange(selection){this.getSelection.emit(selection)}ngOnInit(){this.filteredOptions=this.formControlId.valueChanges.pipe((0,startWith.Z)(""),(0,map.T)((value=>this._filter(value||""))))}_filter(value){const filterValue=value.toLowerCase();return this.options.filter((option=>option.toLowerCase().includes(filterValue)))}constructor(el,renderer){this.el=el,this.renderer=renderer,this.customClasses="",this.formControlId=new fesm2022_forms.MJ,this.errorMessage="",this.hintMessage="",this.hasError=!1,this.hasIcon=!1,this.inputId="",this.isDisabled=!1,this.isRequired=!1,this.label="",this.panelClasses="",this.placeholder="",this.maxWidth=0,this.options=[],this.getSelection=new core.EventEmitter}ngAfterViewInit(){this.el.nativeElement.getAttributeNames().forEach((attr=>this.renderer.removeAttribute(this.el.nativeElement,attr)))}static{this.ctorParameters=()=>[{type:core.ElementRef},{type:core.Renderer2}]}static{this.propDecorators={customClasses:[{type:core.Input}],formControlId:[{type:core.Input}],errorMessage:[{type:core.Input}],hintMessage:[{type:core.Input}],hasError:[{type:core.Input}],hasIcon:[{type:core.Input}],inputId:[{type:core.Input}],isDisabled:[{type:core.Input}],isRequired:[{type:core.Input}],label:[{type:core.Input}],panelClasses:[{type:core.Input}],placeholder:[{type:core.Input}],maxWidth:[{type:core.Input}],options:[{type:core.Input}],getSelection:[{type:core.Output}]}}};QDSAutocompleteComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"qds-autocomplete",standalone:!0,imports:[common_module_Dx7dWex5.MD,fesm2022_forms.X1,module_DAp_YJSv.M,input.fS,autocomplete.jL],template:'\n        <div class="ds-input__wrapper">\n            <mat-form-field\n                class="ds-input"\n                [class]="customClasses"\n                [class.--disabled]="\n                    (formControlId && formControlId.disabled) || isDisabled\n                "\n                [class.--error]="\n                    (formControlId &&\n                        formControlId.invalid &&\n                        formControlId.touched) ||\n                    hasError\n                "\n                [class.--required]="isRequired"\n                [ngStyle]="{ \'max-width.px\': maxWidth ? maxWidth : null }"\n            >\n                <mat-label *ngIf="label" class="ds-input__label">\n                    <span>{{ label }}</span>\n                </mat-label>\n                <span *ngIf="hasIcon" class="ds-icon--search" matPrefix></span>\n                <input\n                    type="text"\n                    matInput\n                    [matAutocomplete]="auto"\n                    [formControl]="formControlId"\n                    [id]="inputId"\n                    [placeholder]="placeholder"\n                    [required]="isRequired"\n                />\n                <mat-autocomplete\n                    class="ds-dropdown"\n                    [class]="panelClasses"\n                    #auto="matAutocomplete"\n                    (optionSelected)="onSelectionChange($event.option.value)"\n                >\n                    <mat-option\n                        *ngFor="\n                            let option of filteredOptions | async;\n                            trackBy: trackByOption\n                        "\n                        class="ds-dropdown__item"\n                        [value]="option"\n                    >\n                        {{ option }}\n                    </mat-option>\n                </mat-autocomplete>\n            </mat-form-field>\n\n            <div *ngIf="hintMessage && !errorMessage" class="ds-input__hint">\n                {{ hintMessage }}\n            </div>\n\n            <div\n                *ngIf="\n                    (formControlId &&\n                        formControlId.invalid &&\n                        formControlId.touched) ||\n                    (hasError && errorMessage)\n                "\n                class="ds-input__error"\n            >\n                {{ errorMessage }}\n            </div>\n        </div>\n    ',styles:[autocomplete_component_default()]})],QDSAutocompleteComponent);const autocomplete_stories={title:"Components/Autocomplete",component:QDSAutocompleteComponent,parameters:{layout:"centered",actions:{disable:!0},interactions:{disable:!0}},tags:["autodocs","!dev"],argTypes:{label:{control:{type:"text"},table:{type:{summary:"string"}}},errorMessage:{control:{type:"text"},table:{type:{summary:"string"}}},hasError:{control:{type:"boolean"},table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}},hasIcon:{control:{type:"boolean"},table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}},hintMessage:{control:{type:"text"},table:{type:{summary:"string"}}},formControlId:{control:{type:"text"},table:{disable:!0}},inputId:{control:{type:"text"},table:{disable:!0}},isDisabled:{control:{type:"boolean"},table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}},isRequired:{control:{type:"boolean"},table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}},options:{control:{type:"object"},table:{disable:!0}},placeholder:{control:{type:"text"},table:{type:{summary:"string"}}},maxWidth:{control:{type:"number"},table:{disable:!0}}}},BasicAutocomplete={args:{label:"Input label",options:["Adrian Veidt","Dan Dreiberg","Edward Blake","Hollis Mason","Jon Osterman","Laurie Juspeczyk","Sally Jupiter","Walter Kovacs"],inputId:"basic-autocomplete"}},AutocompleteWithIcon={args:{...BasicAutocomplete.args,hasIcon:!0,inputId:"icon-autocomplete"}},__namedExportsOrder=["BasicAutocomplete","AutocompleteWithIcon"];BasicAutocomplete.parameters={...BasicAutocomplete.parameters,docs:{...BasicAutocomplete.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Input label',\n    options: ['Adrian Veidt', 'Dan Dreiberg', 'Edward Blake', 'Hollis Mason', 'Jon Osterman', 'Laurie Juspeczyk', 'Sally Jupiter', 'Walter Kovacs'],\n    inputId: 'basic-autocomplete'\n  }\n}",...BasicAutocomplete.parameters?.docs?.source}}},AutocompleteWithIcon.parameters={...AutocompleteWithIcon.parameters,docs:{...AutocompleteWithIcon.parameters?.docs,source:{originalSource:"{\n  args: {\n    ...BasicAutocomplete.args,\n    hasIcon: true,\n    inputId: 'icon-autocomplete'\n  }\n}",...AutocompleteWithIcon.parameters?.docs?.source}}}}}]);