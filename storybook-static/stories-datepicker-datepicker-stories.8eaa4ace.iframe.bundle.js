"use strict";(self.webpackChunksbdsp_angular=self.webpackChunksbdsp_angular||[]).push([[2796],{"./src/stories/datepicker/datepicker.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{BasicDatepicker:()=>BasicDatepicker,DateRangePicker:()=>DateRangePicker,__namedExportsOrder:()=>__namedExportsOrder,default:()=>datepicker_stories});var dist=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),common_module_Dx7dWex5=__webpack_require__("./node_modules/@angular/common/fesm2022/common_module-Dx7dWex5.mjs"),fesm2022_forms=__webpack_require__("./node_modules/@angular/forms/fesm2022/forms.mjs"),module_DAp_YJSv=__webpack_require__("./node_modules/@angular/material/fesm2022/module-DAp_YJSv.mjs"),input=__webpack_require__("./node_modules/@angular/material/fesm2022/input.mjs"),datepicker=__webpack_require__("./node_modules/@angular/material/fesm2022/datepicker.mjs"),fesm2022_core=__webpack_require__("./node_modules/@angular/material/fesm2022/core.mjs"),date_formats_K6TQue_Y=__webpack_require__("./node_modules/@angular/material/fesm2022/date-formats-K6TQue-Y.mjs");let QDSNativeDateAdapter=class QDSNativeDateAdapter extends fesm2022_core.xW{format(date,displayFormat){if("input"===displayFormat){return`${this._to2(date.getMonth()+1)}/${this._to2(date.getDate())}/${date.getFullYear()}`}return super.format(date,displayFormat)}parse(value){if("string"==typeof value&&value.includes("/")){const parts=value.split("/").map((p=>p.trim()));if(3===parts.length){const[mm,dd,yyyy]=parts,month=Number(mm)-1,day=Number(dd),year=Number(yyyy);if(!isNaN(month)&&!isNaN(day)&&!isNaN(year)&&month>=0&&month<12&&day>0&&day<=31){const d=new Date(year,month,day);if(!isNaN(d.getTime()))return d}}}return super.parse(value)}_to2(v){return v<10?`0${v}`:`${v}`}};QDSNativeDateAdapter=(0,tslib_es6.Cg)([(0,core.Injectable)()],QDSNativeDateAdapter);let QDSDatepickerComponent=class QDSDatepickerComponent{onSelectionChange(selection){this.getSelection.emit(selection)}constructor(el,renderer){this.el=el,this.renderer=renderer,this.customClasses="",this.formControlId=new fesm2022_forms.MJ,this.formControlEndId=new fesm2022_forms.MJ,this.errorMessage="",this.hasError=!1,this.hintMessage="",this.inputId="",this.endInputId="",this.isDisabled=!1,this.isRange=!1,this.isRequired=!1,this.label="",this.maxDate=null,this.minDate=null,this.panelClasses="",this.placeholder="",this.getSelection=new core.EventEmitter}ngAfterViewInit(){this.el.nativeElement.getAttributeNames().forEach((attr=>this.renderer.removeAttribute(this.el.nativeElement,attr)))}static{this.ctorParameters=()=>[{type:core.ElementRef},{type:core.Renderer2}]}static{this.propDecorators={customClasses:[{type:core.Input}],formControlId:[{type:core.Input}],formControlEndId:[{type:core.Input}],errorMessage:[{type:core.Input}],hasError:[{type:core.Input}],hintMessage:[{type:core.Input}],inputId:[{type:core.Input}],endInputId:[{type:core.Input}],isDisabled:[{type:core.Input}],isRange:[{type:core.Input}],isRequired:[{type:core.Input}],label:[{type:core.Input}],maxDate:[{type:core.Input}],minDate:[{type:core.Input}],panelClasses:[{type:core.Input}],placeholder:[{type:core.Input}],getSelection:[{type:core.Output}]}}};QDSDatepickerComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"qds-datepicker",standalone:!0,imports:[common_module_Dx7dWex5.MD,fesm2022_forms.X1,module_DAp_YJSv.M,input.fS,datepicker.X6,fesm2022_core.WX],template:'\n        <ng-container *ngIf="isRange; else singleDate">\n            <mat-form-field\n                class="ds-input"\n                [class]="customClasses"\n                [class.--error]="\n                    (formControlId &&\n                        formControlId.invalid &&\n                        formControlId.touched) ||\n                    (formControlEndId &&\n                        formControlEndId.invalid &&\n                        formControlEndId.touched) ||\n                    hasError\n                "\n                [class.mat-form-field-invalid]="\n                    (formControlId &&\n                        formControlId.invalid &&\n                        formControlId.touched) ||\n                    (formControlEndId &&\n                        formControlEndId.invalid &&\n                        formControlEndId.touched) ||\n                    hasError\n                "\n                [class.--required]="isRequired"\n                [class.mat-form-field-disabled]="\n                    (formControlId && formControlId.disabled) ||\n                    (formControlEndId && formControlEndId.disabled) ||\n                    isDisabled\n                "\n            >\n                <mat-label *ngIf="label" class="ds-input__label">\n                    <span>{{ label }}</span>\n                </mat-label>\n\n                <mat-date-range-input\n                    [rangePicker]="pickerRange"\n                    [min]="minDate ? minDate : \'\'"\n                    [max]="maxDate ? maxDate : \'\'"\n                >\n                    <input\n                        matStartDate\n                        [formControl]="formControlId"\n                        [id]="inputId"\n                        placeholder="{{ placeholder }}"\n                    />\n                    <input\n                        matEndDate\n                        [formControl]="formControlEndId"\n                        [id]="endInputId"\n                        placeholder="{{ placeholder }}"\n                    />\n                </mat-date-range-input>\n\n                <mat-datepicker-toggle\n                    matSuffix\n                    [for]="pickerRange"\n                ></mat-datepicker-toggle>\n\n                <mat-date-range-picker\n                    [panelClass]="panelClasses"\n                    #pickerRange\n                    xPosition="end"\n                ></mat-date-range-picker>\n            </mat-form-field>\n        </ng-container>\n        <ng-template #singleDate>\n            <mat-form-field\n                class="ds-input"\n                [class]="customClasses"\n                [class.--error]="\n                    (formControlId &&\n                        formControlId.invalid &&\n                        formControlId.touched) ||\n                    hasError\n                "\n                [class.mat-form-field-disabled]="\n                    (formControlId && formControlId.disabled) ||\n                    (formControlEndId && formControlEndId.disabled) ||\n                    isDisabled\n                "\n                [class.--required]="isRequired"\n            >\n                <mat-label *ngIf="label" class="ds-input__label">\n                    <span>{{ label }}</span>\n                </mat-label>\n\n                <input\n                    matInput\n                    placeholder="{{ placeholder }}"\n                    value=""\n                    [formControl]="formControlId"\n                    [id]="inputId"\n                    [matDatepicker]="picker"\n                    [min]="minDate ? minDate : \'\'"\n                    [max]="maxDate ? maxDate : \'\'"\n                />\n\n                <mat-datepicker-toggle\n                    matSuffix\n                    [for]="picker"\n                ></mat-datepicker-toggle>\n\n                <mat-datepicker\n                    [panelClass]="panelClasses"\n                    #picker\n                    xPosition="end"\n                ></mat-datepicker>\n            </mat-form-field>\n        </ng-template>\n\n        <ng-container *ngIf="isRange; else singleDateMessages">\n            <div *ngIf="hintMessage && !errorMessage" class="ds-input__hint">\n                {{ hintMessage }}\n            </div>\n\n            <div\n                *ngIf="\n                    (formControlId &&\n                        formControlId.invalid &&\n                        formControlId.touched) ||\n                    (formControlEndId &&\n                        formControlEndId.invalid &&\n                        formControlEndId.touched &&\n                        errorMessage)\n                "\n                class="ds-input__error"\n            >\n                {{ errorMessage }}\n            </div>\n        </ng-container>\n        <ng-template #singleDateMessages>\n            <div *ngIf="hintMessage && !errorMessage" class="ds-input__hint">\n                {{ hintMessage }}\n            </div>\n\n            <div\n                *ngIf="\n                    formControlId &&\n                    formControlId.invalid &&\n                    formControlId.touched &&\n                    errorMessage\n                "\n                class="ds-input__error"\n            >\n                {{ errorMessage }}\n            </div>\n        </ng-template>\n    ',providers:[{provide:date_formats_K6TQue_Y.a,useValue:{parse:{dateInput:"input"},display:{dateInput:"input",monthYearLabel:{year:"numeric",month:"short"},dateA11yLabel:"MM/dd/yyyy",monthYearA11yLabel:"MMMM yyyy"}}},{provide:date_formats_K6TQue_Y.D,useClass:QDSNativeDateAdapter}]})],QDSDatepickerComponent);const datepicker_stories={title:"Components/Datepicker",component:QDSDatepickerComponent,decorators:[(0,dist.moduleMetadata)({imports:[datepicker.X6,module_DAp_YJSv.M,input.fS,fesm2022_core.WX]})],parameters:{layout:"centered",actions:{disable:!0},interactions:{disable:!0}},tags:["autodocs","!dev"],argTypes:{label:{control:{type:"text"},table:{type:{summary:"string"}}},hintMessage:{control:{type:"text"},table:{type:{summary:"string"}}},errorMessage:{control:{type:"text"},table:{type:{summary:"string"}}},hasError:{control:{type:"boolean"},table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}},isDisabled:{control:{type:"boolean"},table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}},isRange:{control:{type:"boolean"},table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}},isRequired:{control:{type:"boolean"},table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}},placeholder:{control:{type:"text"},table:{type:{summary:"string"}}}}},BasicDatepicker={args:{label:"Select a date",hintMessage:"mm/dd/yyyy",inputId:"datepicker-1",placeholder:"mm/dd/yyyy"},argTypes:{inputId:{table:{disable:!0}}}},DateRangePicker={args:{label:"Custom range",hintMessage:"mm/dd/yyyy - mm/dd/yyyy",inputId:"datepicker-3",isRange:!0,placeholder:"mm/dd/yyyy"},argTypes:{...BasicDatepicker.argTypes}},__namedExportsOrder=["BasicDatepicker","DateRangePicker"];BasicDatepicker.parameters={...BasicDatepicker.parameters,docs:{...BasicDatepicker.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Select a date',\n    hintMessage: 'mm/dd/yyyy',\n    inputId: 'datepicker-1',\n    placeholder: 'mm/dd/yyyy'\n  },\n  argTypes: {\n    inputId: {\n      table: {\n        disable: true\n      }\n    }\n  }\n}",...BasicDatepicker.parameters?.docs?.source}}},DateRangePicker.parameters={...DateRangePicker.parameters,docs:{...DateRangePicker.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Custom range',\n    hintMessage: 'mm/dd/yyyy - mm/dd/yyyy',\n    inputId: 'datepicker-3',\n    isRange: true,\n    placeholder: 'mm/dd/yyyy'\n  },\n  argTypes: {\n    ...BasicDatepicker.argTypes\n  }\n}",...DateRangePicker.parameters?.docs?.source}}}}}]);