"use strict";(self.webpackChunksbdsp_angular=self.webpackChunksbdsp_angular||[]).push([[8742],{"./src/stories/avatar/avatar.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{OutlinedAvatar:()=>OutlinedAvatar,SolidAvatar:()=>SolidAvatar,__namedExportsOrder:()=>__namedExportsOrder,default:()=>avatar_stories});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs");let QDSAvatarComponent=class QDSAvatarComponent{onClick(event){this.clickHandler.emit(event)}getSize(){return`--${this.size}`}constructor(el,renderer){this.el=el,this.renderer=renderer,this.customClasses="",this.isButton=!1,this.isDisabled=!1,this.isOutlined=!1,this.hasNotification=!1,this.initial="",this.size="lg",this.clickHandler=new core.EventEmitter}ngAfterViewInit(){this.el.nativeElement.getAttributeNames().forEach((attr=>this.renderer.removeAttribute(this.el.nativeElement,attr)))}static{this.ctorParameters=()=>[{type:core.ElementRef},{type:core.Renderer2}]}static{this.propDecorators={customClasses:[{type:core.Input}],isButton:[{type:core.Input}],isDisabled:[{type:core.Input}],isOutlined:[{type:core.Input}],hasNotification:[{type:core.Input}],initial:[{type:core.Input}],size:[{type:core.Input}],clickHandler:[{type:core.Output}]}}};QDSAvatarComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"qds-avatar",template:'\n        <ng-container *ngIf="isButton; else divTemplate">\n            <button\n                class="ds-avatar"\n                [ngClass]="getSize()"\n                [class]="customClasses"\n                [class.--disabled]="isDisabled"\n                [class.--notification]="hasNotification"\n                [class.--solid]="!isOutlined"\n                [class.--outlined]="isOutlined"\n                (click)="onClick($event)"\n            >\n                {{ initial }}\n            </button>\n        </ng-container>\n        <ng-template #divTemplate>\n            <div\n                class="ds-avatar"\n                [ngClass]="getSize()"\n                [class]="customClasses"\n                [class.--disabled]="isDisabled"\n                [class.--notification]="hasNotification"\n                [class.--solid]="!isOutlined"\n                [class.--outlined]="isOutlined"\n            >\n                {{ initial }}\n            </div>\n        </ng-template>\n    '})],QDSAvatarComponent);const avatar_stories={title:"Components/Avatar",component:QDSAvatarComponent,parameters:{layout:"centered",actions:{disable:!0},interactions:{disable:!0}},tags:["autodocs","!dev"],argTypes:{initial:{control:"text",table:{type:{summary:"string"}}},size:{control:"radio",options:["sm","md","lg","xl"],table:{type:{summary:"'sm' | 'md' | 'lg' | 'xl'"},defaultValue:{summary:"lg"}}},isButton:{control:{type:"boolean"},table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}},isDisabled:{control:{type:"boolean"},table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}},isOutlined:{control:{type:"boolean"},table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}},hasNotification:{control:{type:"boolean"},table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}}}},SolidAvatar={args:{initial:"A",size:"lg"}},OutlinedAvatar={args:{...SolidAvatar.args,isOutlined:!0}},__namedExportsOrder=["SolidAvatar","OutlinedAvatar"];SolidAvatar.parameters={...SolidAvatar.parameters,docs:{...SolidAvatar.parameters?.docs,source:{originalSource:"{\n  args: {\n    initial: 'A',\n    size: 'lg'\n  }\n}",...SolidAvatar.parameters?.docs?.source}}},OutlinedAvatar.parameters={...OutlinedAvatar.parameters,docs:{...OutlinedAvatar.parameters?.docs,source:{originalSource:"{\n  args: {\n    ...SolidAvatar.args,\n    isOutlined: true\n  }\n}",...OutlinedAvatar.parameters?.docs?.source}}}}}]);