"use strict";(self.webpackChunksbdsp_angular=self.webpackChunksbdsp_angular||[]).push([[7322],{"./src/stories/navigation/rail.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{BasicRail:()=>BasicRail,RailWithNoHeader:()=>RailWithNoHeader,__namedExportsOrder:()=>__namedExportsOrder,default:()=>rail_stories});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs");let QDSNavRailComponent=class QDSNavRailComponent{closeDrawer(){this.showDrawer=-1,this.drawerContents=[],this.showExpandedNav=!1,this.navItems=this.navItems.map((item=>(item.active="",item)))}selectNavItem(index){const navItem=this.navItems[index];if(navItem?.route)return this.navigateTo(navItem.route),void this.closeDrawer();this.showDrawer===index?this.closeDrawer():(this.showDrawer=index,this.drawerContents=navItem?.subNav??[],this.navItems=this.navItems.map(((item,itemIndex)=>(item.active=index===itemIndex?"--opened":"",item))))}expandSubNav(item){item?.route?this.navigateTo(item.route):this.showExpandedNav===item?this.showExpandedNav=!1:this.showExpandedNav=item}navigateTo(route){window.location.href=route}constructor(el,renderer){this.el=el,this.renderer=renderer,this.navItems=[],this.noHeader=!1,this.showDrawer=-1,this.drawerContents=[],this.showExpandedNav=!1}ngAfterViewInit(){this.el.nativeElement.getAttributeNames().forEach((attr=>this.renderer.removeAttribute(this.el.nativeElement,attr)))}static{this.ctorParameters=()=>[{type:core.ElementRef},{type:core.Renderer2}]}static{this.propDecorators={navItems:[{type:core.Input}],noHeader:[{type:core.Input}]}}};QDSNavRailComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"qds-nav-rail",template:'\n        <header class="ds-header" *ngIf="!noHeader">\n            <div class="ds-grid --margins">\n                <a class="ds-brand-wrapper --md" href="/">\n                    <img\n                        src="https://ds.cdn.questdiagnostics.com/assets/img/qd-brand--horizontal--green.svg"\n                        alt="logo"\n                    />\n                </a>\n            </div>\n        </header>\n\n        <div class="ds-navrail" [class.--no-header]="noHeader">\n            <div class="ds-navrail__rail">\n                <ng-container *ngFor="let item of navItems; index as i">\n                    <button\n                        class="ds-navrail__item"\n                        [class]="item.active"\n                        (click)="selectNavItem(i)"\n                    >\n                        <div\n                            *ngIf="item.hasNotification"\n                            class="ds-badge"\n                            [class.--dot]="!item.notificationCount"\n                            [class.--circle]="item.notificationCount"\n                        >\n                            <ng-container *ngIf="item.notificationCount">\n                                {{ item.notificationCount }}\n                            </ng-container>\n                        </div>\n\n                        <span\n                            *ngIf="item.icon"\n                            class="ds-icon--{{ item.icon }}"\n                        ></span>\n\n                        <span class="ds-navrail__label">\n                            {{ item.label }}\n                        </span>\n                    </button>\n                </ng-container>\n            </div>\n\n            <div\n                class="ds-navrail__drawer"\n                [class.--opened]="showDrawer !== -1"\n            >\n                <ng-container *ngFor="let item of drawerContents; index as i">\n                    <ng-container *ngIf="!item.expandable; else noSubNav">\n                        <button\n                            class="ds-navrail__sub-item"\n                            (click)="navigateTo(item.route)"\n                        >\n                            <span class="ds-navrail__label">\n                                {{ item.label }}\n                            </span>\n                        </button>\n                    </ng-container>\n                    <ng-template #noSubNav>\n                        <button\n                            class="ds-navrail__sub-item --expandable"\n                            [class.--opened]="showExpandedNav === item"\n                            (click)="expandSubNav(item)"\n                        >\n                            <span class="ds-navrail__label">\n                                {{ item.label }}\n                            </span>\n                        </button>\n\n                        <div\n                            class="ds-navrail__sub-drawer"\n                            [class.--opened]="showExpandedNav === item"\n                        >\n                            <ng-container\n                                *ngFor="\n                                    let subitem of item.expandedSubNav;\n                                    index as i\n                                "\n                            >\n                                <button\n                                    class="ds-navrail__sub-item"\n                                    (click)="navigateTo(subitem.route)"\n                                >\n                                    <span class="ds-navrail__label">\n                                        {{ subitem.label }}\n                                    </span>\n                                </button>\n                            </ng-container>\n                        </div>\n                    </ng-template>\n                </ng-container>\n            </div>\n\n            <div\n                class="ds-navrail__overlay"\n                [class.--opened]="showDrawer !== -1"\n                (click)="closeDrawer()"\n            ></div>\n        </div>\n    '})],QDSNavRailComponent);const rail_stories={title:"Components/Navigation/Rail",component:QDSNavRailComponent,parameters:{layout:"centered",actions:{disable:!0},interactions:{disable:!0}},tags:["autodocs","!dev"],argTypes:{navItems:{control:{type:"object"},table:{type:{summary:"Array"},defaultValue:{summary:"[]"}}},noHeader:{control:{type:"boolean"},table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}}}},navItems=[{label:"Home",icon:"house",route:"#"},{label:"Tests",icon:"test-tube-label",hasNotification:!0,notificationCount:"#",route:"",subNav:[{label:"Tests sub menu label",route:"",expandedsubNav:[{label:"Sub menu label"},{label:"Sub menu label"}]},{label:"Tests sub menu label",route:""}]},{label:"Results",icon:"notepad",hasNotification:!0,notificationCount:"",route:"",subNav:[{label:"Results sub menu label",route:"",expandedsubNav:[{label:"Sub menu label"},{label:"Sub menu label"}]},{label:"Results sub menu label",route:""}]}],BasicRail={args:{navItems,noHeader:!1},argTypes:{}},RailWithNoHeader={args:{navItems,noHeader:!0},argTypes:{}},__namedExportsOrder=["BasicRail","RailWithNoHeader"];BasicRail.parameters={...BasicRail.parameters,docs:{...BasicRail.parameters?.docs,source:{originalSource:"{\n  args: {\n    navItems: navItems,\n    noHeader: false\n  },\n  argTypes: {}\n}",...BasicRail.parameters?.docs?.source}}},RailWithNoHeader.parameters={...RailWithNoHeader.parameters,docs:{...RailWithNoHeader.parameters?.docs,source:{originalSource:"{\n  args: {\n    navItems: navItems,\n    noHeader: true\n  },\n  argTypes: {}\n}",...RailWithNoHeader.parameters?.docs?.source}}}}}]);