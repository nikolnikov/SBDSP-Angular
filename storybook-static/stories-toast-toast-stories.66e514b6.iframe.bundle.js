"use strict";(self.webpackChunksbdsp_angular=self.webpackChunksbdsp_angular||[]).push([[3802],{"./src/stories/toast/toast.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AlertToast:()=>AlertToast,DefaultToast:()=>DefaultToast,ErrorToast:()=>ErrorToast,InformativeToast:()=>InformativeToast,SuccessToast:()=>SuccessToast,ToastWithTextLink:()=>ToastWithTextLink,__namedExportsOrder:()=>__namedExportsOrder,default:()=>toast_stories});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),dist=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),snack_bar=__webpack_require__("./node_modules/@angular/material/fesm2022/snack-bar.mjs");let QDSToastComponent=class QDSToastComponent{onClose(){this.toastRef.dismissWithAction()}constructor(toastRef,renderer,data){this.toastRef=toastRef,this.renderer=renderer,this.data=data,this.hideDismiss=!1,this.hideIcon=!1,this.message="",this.positionYOffset=0,this.positionYOffsetMobile=0,this.textLinkLabel="",this.hasDuration=!1,this.hideDismiss=data.hideDismiss,this.hideIcon=data.hideIcon,this.message=data.message,this.positionYOffset=data.positionYOffset,this.positionYOffsetMobile=data.positionYOffsetMobile,this.textLinkLabel=data.textLinkLabel}ngAfterViewInit(){this.updateOffset()}onResize(){this.updateOffset()}updateOffset(){const snackBarContainer=document.querySelector(".mat-mdc-snack-bar-container");if(snackBarContainer){let offset;offset=window.innerWidth<900?this.positionYOffsetMobile?`${this.positionYOffsetMobile}px`:"40px":this.positionYOffset?`${this.positionYOffset}px`:"64px","bottom"===this.toastRef.containerInstance.snackBarConfig.verticalPosition?(this.renderer.removeStyle(snackBarContainer,"margin-top"),this.renderer.setStyle(snackBarContainer,"margin-bottom",offset)):(this.renderer.removeStyle(snackBarContainer,"margin-bottom"),this.renderer.setStyle(snackBarContainer,"margin-top",offset))}}static{this.ctorParameters=()=>[{type:snack_bar.TQ},{type:core.Renderer2},{type:void 0,decorators:[{type:core.Inject,args:[snack_bar.ht]}]}]}static{this.propDecorators={hideDismiss:[{type:core.Input}],hideIcon:[{type:core.Input}],message:[{type:core.Input}],positionYOffset:[{type:core.Input}],positionYOffsetMobile:[{type:core.Input}],textLinkLabel:[{type:core.Input}],onResize:[{type:core.HostListener,args:["window:resize",["$event"]]}]}}};QDSToastComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"qds-toast",template:'\n        <div\n            class="ds-toast__content"\n            [class.--text-close]="textLinkLabel"\n            [class.--hide-icon]="hideIcon"\n        >\n            <span matSnackBarLabel>\n                {{ message }}\n            </span>\n\n            <span *ngIf="!hideDismiss" matSnackBarActions>\n                <a *ngIf="textLinkLabel" class="ds-link" (click)="onClose()">\n                    {{ textLinkLabel }}\n                </a>\n\n                <button\n                    class="ds-button --icon --md"\n                    *ngIf="!textLinkLabel"\n                    (click)="onClose()"\n                >\n                    <span class="ds-icon--close"></span>\n                </button>\n            </span>\n        </div>\n    '})],QDSToastComponent);var animations=__webpack_require__("./node_modules/@angular/platform-browser/fesm2022/animations.mjs"),common=__webpack_require__("./node_modules/@angular/common/fesm2022/common.mjs");let ToastTriggerComponent=class ToastTriggerComponent{constructor(toast){this.toast=toast,this.duration=0,this.hideDismiss=!1,this.hideIcon=!1,this.message="",this.positionYOffset=0,this.positionYOffsetMobile=0,this.textLinkLabel="",this.type=""}showToast(){this.toast.openFromComponent(QDSToastComponent,{duration:this.duration,panelClass:["ds-toast","--"+this.type],verticalPosition:"top",data:{message:this.message,hideDismiss:this.hideDismiss,hideIcon:this.hideIcon,positionYOffset:this.positionYOffset,positionYOffsetMobile:this.positionYOffsetMobile,textLinkLabel:this.textLinkLabel}})}static{this.ctorParameters=()=>[{type:snack_bar.UG}]}static{this.propDecorators={duration:[{type:core.Input}],hideDismiss:[{type:core.Input}],hideIcon:[{type:core.Input}],message:[{type:core.Input}],positionYOffset:[{type:core.Input}],positionYOffsetMobile:[{type:core.Input}],textLinkLabel:[{type:core.Input}],type:[{type:core.Input}]}}};ToastTriggerComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"app-toast-story-trigger",template:'\n        <button class="ds-button --primary" (click)="showToast()">\n            Basic Toast\n        </button>\n    '})],ToastTriggerComponent);const toast_stories={title:"Components/Toast",component:ToastTriggerComponent,decorators:[(0,dist.moduleMetadata)({declarations:[ToastTriggerComponent,QDSToastComponent],imports:[common.CommonModule,snack_bar._T,animations.BrowserAnimationsModule]})],parameters:{layout:"centered",actions:{disable:!0},interactions:{disable:!0}},argTypes:{duration:{control:{type:"number"},table:{type:{summary:"number"}}},hideDismiss:{control:{type:"boolean"},table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}},hideIcon:{control:{type:"boolean"},table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}},message:{control:{type:"text"},table:{type:{summary:"string"}}},positionYOffset:{control:{type:"number"},table:{type:{summary:"number"}}},positionYOffsetMobile:{control:{type:"number"},table:{type:{summary:"number"}}},textLinkLabel:{control:{type:"text"},table:{type:{summary:"string"}}},type:{control:"radio",options:["alert","error","informative","success"],table:{type:{summary:"'alert' | 'error' | 'informative' | 'success'"}}}},tags:["autodocs","!dev"]},DefaultToast={args:{duration:5e3,message:"New results are available."},parameters:{docs:{source:{language:"typescript",type:"code",code:"\nshowToast() {\n    this.toast.openFromComponent(QDSToastComponent, {\n        duration: 5000,\n        panelClass: ['ds-toast'],\n        verticalPosition: 'top',\n        data: { \n            Data Inputs go here\n        }\n    });\n}\n                ".trim()}}}},InformativeToast={args:{duration:5e3,type:"informative",message:"New results are available."},parameters:{docs:{source:{language:"typescript",type:"code",code:"\nshowToast() {\n    this.toast.openFromComponent(QDSToastComponent, {\n        duration: 5000,\n        panelClass: ['ds-toast', '--informative'],\n        verticalPosition: 'top',\n        data: { \n            Data Inputs go here\n        }\n    });\n}\n                ".trim()}}}},SuccessToast={args:{duration:5e3,type:"success",message:"New results are available."},parameters:{docs:{source:{language:"typescript",type:"code",code:"\nshowToast() {\n    this.toast.openFromComponent(QDSToastComponent, {\n        duration: 5000,\n        panelClass: ['ds-toast', '--success'],\n        verticalPosition: 'top',\n        data: { \n            Data Inputs go here\n        }\n    });\n}\n                ".trim()}}}},AlertToast={args:{duration:5e3,type:"alert",message:"New results are available."},parameters:{docs:{source:{language:"typescript",type:"code",code:"\nshowToast() {\n    this.toast.openFromComponent(QDSToastComponent, {\n        duration: 5000,\n        panelClass: ['ds-toast', '--alert'],\n        verticalPosition: 'top',\n        data: { \n            Data Inputs go here\n        }\n    });\n}\n                ".trim()}}}},ErrorToast={args:{duration:5e3,type:"error",message:"New results are available."},parameters:{docs:{source:{language:"typescript",type:"code",code:"\nshowToast() {\n    this.toast.openFromComponent(QDSToastComponent, {\n        duration: 5000,\n        panelClass: ['ds-toast', '--error'],\n        verticalPosition: 'top',\n        data: { \n            Data Inputs go here\n        }\n    });\n}\n                ".trim()}}}},ToastWithTextLink={args:{duration:5e3,message:"New results are available.",textLinkLabel:"Undo"},parameters:{docs:{source:{language:"typescript",type:"code",code:"\nshowToast() {\n    this.toast.openFromComponent(QDSToastComponent, {\n        duration: 5000,\n        panelClass: ['ds-toast'],\n        verticalPosition: 'top',\n        data: { \n            Data Inputs go here\n        }\n    });\n}\n                ".trim()}}}},__namedExportsOrder=["DefaultToast","InformativeToast","SuccessToast","AlertToast","ErrorToast","ToastWithTextLink"];DefaultToast.parameters={...DefaultToast.parameters,docs:{...DefaultToast.parameters?.docs,source:{originalSource:"{\n  args: {\n    duration: 5000,\n    message: 'New results are available.'\n  },\n  parameters: {\n    docs: {\n      source: {\n        language: 'typescript',\n        type: 'code',\n        code: `\nshowToast() {\n    this.toast.openFromComponent(QDSToastComponent, {\n        duration: 5000,\n        panelClass: ['ds-toast'],\n        verticalPosition: 'top',\n        data: { \n            Data Inputs go here\n        }\n    });\n}\n                `.trim()\n      }\n    }\n  }\n}",...DefaultToast.parameters?.docs?.source}}},InformativeToast.parameters={...InformativeToast.parameters,docs:{...InformativeToast.parameters?.docs,source:{originalSource:"{\n  args: {\n    duration: 5000,\n    type: 'informative',\n    message: 'New results are available.'\n  },\n  parameters: {\n    docs: {\n      source: {\n        language: 'typescript',\n        type: 'code',\n        code: `\nshowToast() {\n    this.toast.openFromComponent(QDSToastComponent, {\n        duration: 5000,\n        panelClass: ['ds-toast', '--informative'],\n        verticalPosition: 'top',\n        data: { \n            Data Inputs go here\n        }\n    });\n}\n                `.trim()\n      }\n    }\n  }\n}",...InformativeToast.parameters?.docs?.source}}},SuccessToast.parameters={...SuccessToast.parameters,docs:{...SuccessToast.parameters?.docs,source:{originalSource:"{\n  args: {\n    duration: 5000,\n    type: 'success',\n    message: 'New results are available.'\n  },\n  parameters: {\n    docs: {\n      source: {\n        language: 'typescript',\n        type: 'code',\n        code: `\nshowToast() {\n    this.toast.openFromComponent(QDSToastComponent, {\n        duration: 5000,\n        panelClass: ['ds-toast', '--success'],\n        verticalPosition: 'top',\n        data: { \n            Data Inputs go here\n        }\n    });\n}\n                `.trim()\n      }\n    }\n  }\n}",...SuccessToast.parameters?.docs?.source}}},AlertToast.parameters={...AlertToast.parameters,docs:{...AlertToast.parameters?.docs,source:{originalSource:"{\n  args: {\n    duration: 5000,\n    type: 'alert',\n    message: 'New results are available.'\n  },\n  parameters: {\n    docs: {\n      source: {\n        language: 'typescript',\n        type: 'code',\n        code: `\nshowToast() {\n    this.toast.openFromComponent(QDSToastComponent, {\n        duration: 5000,\n        panelClass: ['ds-toast', '--alert'],\n        verticalPosition: 'top',\n        data: { \n            Data Inputs go here\n        }\n    });\n}\n                `.trim()\n      }\n    }\n  }\n}",...AlertToast.parameters?.docs?.source}}},ErrorToast.parameters={...ErrorToast.parameters,docs:{...ErrorToast.parameters?.docs,source:{originalSource:"{\n  args: {\n    duration: 5000,\n    type: 'error',\n    message: 'New results are available.'\n  },\n  parameters: {\n    docs: {\n      source: {\n        language: 'typescript',\n        type: 'code',\n        code: `\nshowToast() {\n    this.toast.openFromComponent(QDSToastComponent, {\n        duration: 5000,\n        panelClass: ['ds-toast', '--error'],\n        verticalPosition: 'top',\n        data: { \n            Data Inputs go here\n        }\n    });\n}\n                `.trim()\n      }\n    }\n  }\n}",...ErrorToast.parameters?.docs?.source}}},ToastWithTextLink.parameters={...ToastWithTextLink.parameters,docs:{...ToastWithTextLink.parameters?.docs,source:{originalSource:"{\n  args: {\n    duration: 5000,\n    message: 'New results are available.',\n    textLinkLabel: 'Undo'\n  },\n  parameters: {\n    docs: {\n      source: {\n        language: 'typescript',\n        type: 'code',\n        code: `\nshowToast() {\n    this.toast.openFromComponent(QDSToastComponent, {\n        duration: 5000,\n        panelClass: ['ds-toast'],\n        verticalPosition: 'top',\n        data: { \n            Data Inputs go here\n        }\n    });\n}\n                `.trim()\n      }\n    }\n  }\n}",...ToastWithTextLink.parameters?.docs?.source}}}}}]);