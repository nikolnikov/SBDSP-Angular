"use strict";(self.webpackChunksbdsp_angular=self.webpackChunksbdsp_angular||[]).push([[1418],{"./src/stories/badge/badge.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{NotificationBadge:()=>NotificationBadge,SecondaryBadge:()=>SecondaryBadge,SecondaryCircleBadge:()=>SecondaryCircleBadge,SolidBadge:()=>SolidBadge,SolidCircleBadge:()=>SolidCircleBadge,__namedExportsOrder:()=>__namedExportsOrder,default:()=>badge_stories});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs");let QDSBadgeComponent=class QDSBadgeComponent{getColor(){return`--${this.color}`}getStatus(){return`--${this.status}`}constructor(el,renderer){this.el=el,this.renderer=renderer,this.color="",this.customClasses="",this.hasNotification=!1,this.isCircle=!1,this.label="",this.secondary=!1,this.status="neutral"}ngAfterViewInit(){this.el.nativeElement.getAttributeNames().forEach((attr=>this.renderer.removeAttribute(this.el.nativeElement,attr)))}static{this.ctorParameters=()=>[{type:core.ElementRef},{type:core.Renderer2}]}static{this.propDecorators={color:[{type:core.Input}],customClasses:[{type:core.Input}],hasNotification:[{type:core.Input}],isCircle:[{type:core.Input}],label:[{type:core.Input}],secondary:[{type:core.Input}],status:[{type:core.Input}]}}};QDSBadgeComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"qds-badge",template:'\n        <div\n            class="ds-badge"\n            [class]="customClasses"\n            [ngClass]="getColor()"\n            [ngClass]="getStatus()"\n            [class.--circle]="isCircle"\n            [class.--secondary]="secondary"\n            [class.--dot]="hasNotification"\n            [class.--neutral]="!status"\n            role="status"\n        >\n            {{ label }}\n        </div>\n    '})],QDSBadgeComponent);const badge_stories={title:"Components/Badge",component:QDSBadgeComponent,parameters:{layout:"centered",actions:{disable:!0},interactions:{disable:!0}},tags:["autodocs","!dev"],argTypes:{label:{control:"text",table:{type:{summary:"string"}}},status:{control:"select",options:["neutral","informative","success","warning","error","new"],table:{type:{summary:"'neutral' | 'informative' | 'success' | 'warning' | 'error' | 'new'"},defaultValue:{summary:"neutral"}}},hasNotification:{control:{type:"boolean"},table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}},isCircle:{control:{type:"boolean"},table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}},secondary:{control:{type:"boolean"},table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}}}},SolidBadge={args:{label:"Status",status:"neutral"}},SolidCircleBadge={args:{isCircle:!0,label:"#",status:"informative"}},SecondaryBadge={args:{label:"Status",secondary:!0,status:"success"}},SecondaryCircleBadge={args:{isCircle:!0,label:"#",secondary:!0,status:"warning"}},NotificationBadge={args:{hasNotification:!0,status:"error"}},__namedExportsOrder=["SolidBadge","SolidCircleBadge","SecondaryBadge","SecondaryCircleBadge","NotificationBadge"];SolidBadge.parameters={...SolidBadge.parameters,docs:{...SolidBadge.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Status',\n    status: 'neutral'\n  }\n}",...SolidBadge.parameters?.docs?.source}}},SolidCircleBadge.parameters={...SolidCircleBadge.parameters,docs:{...SolidCircleBadge.parameters?.docs,source:{originalSource:"{\n  args: {\n    isCircle: true,\n    label: '#',\n    status: 'informative'\n  }\n}",...SolidCircleBadge.parameters?.docs?.source}}},SecondaryBadge.parameters={...SecondaryBadge.parameters,docs:{...SecondaryBadge.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Status',\n    secondary: true,\n    status: 'success'\n  }\n}",...SecondaryBadge.parameters?.docs?.source}}},SecondaryCircleBadge.parameters={...SecondaryCircleBadge.parameters,docs:{...SecondaryCircleBadge.parameters?.docs,source:{originalSource:"{\n  args: {\n    isCircle: true,\n    label: '#',\n    secondary: true,\n    status: 'warning'\n  }\n}",...SecondaryCircleBadge.parameters?.docs?.source}}},NotificationBadge.parameters={...NotificationBadge.parameters,docs:{...NotificationBadge.parameters?.docs,source:{originalSource:"{\n  args: {\n    hasNotification: true,\n    status: 'error'\n  }\n}",...NotificationBadge.parameters?.docs?.source}}}}}]);