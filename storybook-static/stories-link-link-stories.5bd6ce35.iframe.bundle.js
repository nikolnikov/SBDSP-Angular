"use strict";(self.webpackChunksbdsp_angular=self.webpackChunksbdsp_angular||[]).push([[8412],{"./src/stories/link/link.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{DefaultLink:()=>DefaultLink,DestructiveLink:()=>DestructiveLink,InverseLink:()=>InverseLink,LinkWithLeftIcon:()=>LinkWithLeftIcon,LinkWithRightIcon:()=>LinkWithRightIcon,__namedExportsOrder:()=>__namedExportsOrder,default:()=>link_stories});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs");let QDSLinkComponent=class QDSLinkComponent{constructor(el,renderer){this.el=el,this.renderer=renderer,this.customClasses="",this.iconLeft="",this.iconRight="",this.isDestructive=!1,this.isInverse=!1,this.label="",this.newWindow=!1,this.url=""}ngAfterViewInit(){this.el.nativeElement.getAttributeNames().forEach((attr=>this.renderer.removeAttribute(this.el.nativeElement,attr)))}static{this.ctorParameters=()=>[{type:core.ElementRef},{type:core.Renderer2}]}static{this.propDecorators={customClasses:[{type:core.Input}],iconLeft:[{type:core.Input}],iconRight:[{type:core.Input}],isDestructive:[{type:core.Input}],isInverse:[{type:core.Input}],label:[{type:core.Input}],newWindow:[{type:core.Input}],url:[{type:core.Input}]}}};QDSLinkComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"qds-link",template:'\n        <a\n            class="ds-link"\n            [ngClass]="customClasses"\n            [class.--destructive]="isDestructive"\n            [class.--inverse]="isInverse"\n            [class.--icons]="iconLeft || iconRight"\n            [href]="url"\n            [target]="newWindow ? \'_blank\' : \'_self\'"\n        >\n            <span *ngIf="iconLeft" class="ds-icon--{{ iconLeft }}"></span>\n\n            <ng-container *ngIf="iconLeft || iconRight; else noIcon">\n                <span>{{ label }}</span>\n            </ng-container>\n\n            <ng-template #noIcon>\n                {{ label }}\n            </ng-template>\n\n            <span *ngIf="iconRight" class="ds-icon--{{ iconRight }}"></span>\n        </a>\n    '})],QDSLinkComponent);const link_stories={title:"Components/Link",component:QDSLinkComponent,parameters:{layout:"centered",actions:{disable:!0},interactions:{disable:!0}},tags:["autodocs","!dev"],argTypes:{label:{control:"text",table:{type:{summary:"string"}}},iconLeft:{control:"text",table:{type:{summary:"string"}}},iconRight:{control:"text",table:{type:{summary:"string"}}},isDestructive:{control:"boolean",table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}},isInverse:{control:"boolean",table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}}}},DefaultLink={args:{label:"Link example",url:null},argTypes:{customClasses:{table:{disable:!0}},url:{table:{disable:!0}},newWindow:{table:{disable:!0}}}},InverseLink={args:{...DefaultLink.args,isInverse:!0},argTypes:{...DefaultLink.argTypes}},DestructiveLink={args:{...DefaultLink.args,isDestructive:!0},argTypes:{...DefaultLink.argTypes}},LinkWithLeftIcon={args:{...DefaultLink.args,iconLeft:"info"},argTypes:{...DefaultLink.argTypes}},LinkWithRightIcon={args:{...DefaultLink.args,iconRight:"info"},argTypes:{...DefaultLink.argTypes}},__namedExportsOrder=["DefaultLink","InverseLink","DestructiveLink","LinkWithLeftIcon","LinkWithRightIcon"];DefaultLink.parameters={...DefaultLink.parameters,docs:{...DefaultLink.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Link example',\n    url: null\n  },\n  argTypes: {\n    customClasses: {\n      table: {\n        disable: true\n      }\n    },\n    url: {\n      table: {\n        disable: true\n      }\n    },\n    newWindow: {\n      table: {\n        disable: true\n      }\n    }\n  }\n}",...DefaultLink.parameters?.docs?.source}}},InverseLink.parameters={...InverseLink.parameters,docs:{...InverseLink.parameters?.docs,source:{originalSource:"{\n  args: {\n    ...DefaultLink.args,\n    isInverse: true\n  },\n  argTypes: {\n    ...DefaultLink.argTypes\n  }\n}",...InverseLink.parameters?.docs?.source}}},DestructiveLink.parameters={...DestructiveLink.parameters,docs:{...DestructiveLink.parameters?.docs,source:{originalSource:"{\n  args: {\n    ...DefaultLink.args,\n    isDestructive: true\n  },\n  argTypes: {\n    ...DefaultLink.argTypes\n  }\n}",...DestructiveLink.parameters?.docs?.source}}},LinkWithLeftIcon.parameters={...LinkWithLeftIcon.parameters,docs:{...LinkWithLeftIcon.parameters?.docs,source:{originalSource:"{\n  args: {\n    ...DefaultLink.args,\n    iconLeft: 'info'\n  },\n  argTypes: {\n    ...DefaultLink.argTypes\n  }\n}",...LinkWithLeftIcon.parameters?.docs?.source}}},LinkWithRightIcon.parameters={...LinkWithRightIcon.parameters,docs:{...LinkWithRightIcon.parameters?.docs,source:{originalSource:"{\n  args: {\n    ...DefaultLink.args,\n    iconRight: 'info'\n  },\n  argTypes: {\n    ...DefaultLink.argTypes\n  }\n}",...LinkWithRightIcon.parameters?.docs?.source}}}}}]);